/* stylelint-disable */
/**
 * Square mixin
 *
 * @param [Number] $dimensions = the height and width of the element
 */
.h1,
.h2,
.h3,
.h4,
.h5,
.h6 {
  font-family: "Barlow Semi Condensed", "Arial";
  font-weight: 700; }
  .h1 a,
  .h1 a:visited,
  .h2 a,
  .h2 a:visited,
  .h3 a,
  .h3 a:visited,
  .h4 a,
  .h4 a:visited,
  .h5 a,
  .h5 a:visited,
  .h6 a,
  .h6 a:visited {
    color: #31D57C;
    text-decoration: none; }
  .h1 a:hover,
  .h2 a:hover,
  .h3 a:hover,
  .h4 a:hover,
  .h5 a:hover,
  .h6 a:hover {
    color: #31D57C;
    text-decoration: underline; }

h1,
.h1 {
  margin: 0 0 1rem 0;
  font-size: 5rem;
  line-height: 6rem;
  color: #3232FF; }

h2,
.h2 {
  margin: 0 0 0.9375rem 0;
  font-size: 3rem;
  line-height: 4rem;
  color: #3232FF; }

h3,
.h3 {
  margin: 0 0 0.9375rem 0;
  font-size: 2rem;
  line-height: 2.5rem;
  color: #3232FF; }

h4,
.h4 {
  margin: 0 0 0.9375rem 0;
  font-size: 1.5rem;
  line-height: 2rem;
  color: #3232FF; }

h5, h6,
.h5,
.h6 {
  margin: 0 0 0.3125rem 0;
  font-size: 1.125rem;
  line-height: 2rem;
  color: #303030; }

.messages--wrapper {
  position: relative;
  clear: both; }
  body.toolbar-fixed .messages--wrapper {
    position: relative;
    z-index: 900; }

.messages {
  position: relative;
  clear: both;
  margin-top: 1rem;
  padding: 0.9375rem 1.875rem 0.9375rem 3.75rem;
  border-radius: 0.1875rem;
  color: #FFFFFF;
  opacity: 1;
  transform: translate(0, 0);
  transition: transform 0.5s ease-in-out; }
  .messages:before {
    position: absolute;
    top: 0.5rem;
    bottom: 0;
    left: 0.9375rem;
    width: 1.875rem;
    height: 1.875rem;
    text-align: center;
    line-height: 1; }
  .messages:first-child {
    margin-top: 1rem; }
  .messages:last-child {
    margin-bottom: 1rem; }
  .messages.js-closing {
    opacity: 0;
    transform: translate(-100%, 0);
    transition: all 0.5s ease-in-out; }
    @media (min-width: 940px) {
      .messages.js-closing {
        transform: translate(0, -100%); } }
  .messages.js-closed {
    display: none; }

.messages--status {
  border: 1px solid #00B16A;
  background-color: #3FC380; }
  .messages--status:before {
    content: '\f058';
    color: #FFFFFF;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    display: inline-block;
    font-style: normal;
    font-variant: normal;
    font-weight: normal;
    line-height: 1;
    text-rendering: auto;
    vertical-align: middle;
    font-size: 1.875rem;
    font-family: 'Font Awesome 5 Pro';
    font-weight: 900; }
  .messages--status a {
    color: #007e4b; }
    .messages--status a:hover {
      color: #00B16A; }

.messages--warning {
  border: 1px solid #F2784B;
  background-color: #EB9532; }
  .messages--warning:before {
    content: '\f071';
    color: #FFFFFF;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    display: inline-block;
    font-style: normal;
    font-variant: normal;
    font-weight: normal;
    line-height: 1;
    text-rendering: auto;
    vertical-align: middle;
    font-size: 1.875rem;
    font-family: 'Font Awesome 5 Pro';
    font-weight: 900; }
  .messages--warning a {
    color: #ef541b; }
    .messages--warning a:hover {
      color: #F2784B; }

.messages--error {
  border: 1px solid #C0392B;
  background-color: #E74C3C; }
  .messages--error:before {
    content: '\f06a';
    color: #FFFFFF;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    display: inline-block;
    font-style: normal;
    font-variant: normal;
    font-weight: normal;
    line-height: 1;
    text-rendering: auto;
    vertical-align: middle;
    font-size: 1.875rem;
    font-family: 'Font Awesome 5 Pro';
    font-weight: 900; }
  .messages--error a {
    color: #962d22; }
    .messages--error a:hover {
      color: #C0392B; }

.message__close {
  cursor: pointer;
  position: absolute;
  right: 0;
  top: 0;
  display: block;
  color: #FFFFFF;
  outline: none; }
  .message__close:hover {
    opacity: 0.6; }
  .message__close .icon {
    display: block;
    width: 2.5rem;
    height: 2.5rem;
    padding-top: 0.4375rem;
    text-align: center; }
    .message__close .icon:before {
      content: '\f00d';
      color: #FFFFFF;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
      display: inline-block;
      font-style: normal;
      font-variant: normal;
      font-weight: normal;
      line-height: 1;
      text-rendering: auto;
      vertical-align: middle;
      font-size: 1rem;
      font-family: 'Font Awesome 5 Pro';
      font-weight: 900; }
  .message__close span {
    display: block !important;
    position: absolute !important;
    clip: rect(1px, 1px, 1px, 1px) !important;
    overflow: hidden !important;
    height: 0.0625rem !important;
    width: 0.0625rem !important;
    word-wrap: normal !important; }

.messages__list {
  list-style: none;
  display: block;
  margin: 0;
  padding: 0; }

.messages__item + .messages__item {
  margin-top: 0.625rem; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
