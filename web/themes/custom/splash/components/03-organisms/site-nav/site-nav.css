/* stylelint-disable */
/**
 * Square mixin
 *
 * @param [Number] $dimensions = the height and width of the element
 */
body:after {
  position: fixed;
  bottom: 0;
  right: 0;
  display: block;
  padding: 0.625rem;
  content: "bp-xs";
  background: red;
  visibility: hidden;
  opacity: 0;
}

body.theme-debug-mode:after {
  visibility: visible;
}

@media (min-width: 768px) {
  body:after {
    content: "bp-sm";
    background: #FFCE00;
    position: fixed;
    bottom: 0;
    right: 0;
  }
}
@media (min-width: 940px) {
  body:after {
    content: "bp-md";
    background: yellow;
    position: fixed;
    bottom: 0;
    right: 0;
  }
}
@media (min-width: 1201px) {
  body:after {
    content: "bp-lg";
    background: green;
    position: fixed;
    bottom: 0;
    right: 0;
  }
}
@media (max-width: 767px) {
  .page-wrapper {
    padding-bottom: 3.6875rem;
  }
  .header__section--secondary {
    position: fixed;
    z-index: 910;
    left: 0;
    bottom: 0;
    width: 100%;
    height: 3.75rem;
    color: #303030;
    background-color: #FFFFFF;
    box-shadow: 0 0 1.875rem rgba(0, 0, 0, 0.4);
  }
  .header__section--secondary .menu--main .menu__link.menu__link--active {
    color: #120B47;
  }
  .navigation__toggle-expand {
    cursor: pointer;
    display: block;
    position: absolute;
    top: 0;
    left: 50%;
    padding-top: 1.875rem;
    width: 3.75rem;
    height: 3.75rem;
    text-align: center;
    transform: translateX(-50%);
  }
  .navigation__toggle-expand, .navigation__toggle-expand:visited {
    color: #303030;
  }
  .navigation__toggle-expand:hover {
    color: #31D57C;
  }
  .navigation__toggle-expand__icon {
    display: block;
    position: absolute;
    left: 50%;
    top: 0;
    padding-top: 0.5rem;
    transform: translateX(-50%);
    transition: opacity 0.3s ease-in-out;
  }
  .navigation__toggle-expand__icon--open {
    opacity: 1;
  }
  .navigation__toggle-expand__icon--open:before {
    content: '\f0c9';
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    display: inline-block;
    font-style: normal;
    font-variant: normal;
    font-weight: normal;
    line-height: 1;
    text-rendering: auto;
    vertical-align: middle;
    font-size: 1.5rem;
    font-family: "Font Awesome 5 Pro";
    font-weight: 900;
  }
  .js-open .navigation__toggle-expand__icon--open {
    opacity: 0;
  }
  .navigation__toggle-expand__icon--closed {
    opacity: 0;
  }
  .navigation__toggle-expand__icon--closed:before {
    content: '\f00d';
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    display: inline-block;
    font-style: normal;
    font-variant: normal;
    font-weight: normal;
    line-height: 1;
    text-rendering: auto;
    vertical-align: middle;
    font-size: 1.5rem;
    font-family: "Font Awesome 5 Pro";
    font-weight: 900;
  }
  .js-open .navigation__toggle-expand__icon--closed {
    opacity: 1;
  }
  .navigation__toggle-expand__text {
    font-size: 0.6875rem;
    line-height: 0.9375rem;
  }
  .navigation__toggle-expand__text--open {
    display: inline-block;
  }
  .js-open .navigation__toggle-expand__text--open {
    display: none;
  }
  .navigation__toggle-expand__text--closed {
    display: none;
  }
  .js-open .navigation__toggle-expand__text--closed {
    display: inline-block;
  }
  .wrapper--navigation__content {
    position: fixed;
    left: 0;
    bottom: 3.75rem;
    overflow: hidden;
    width: 100vw;
    height: 0;
    transition: all 0.3s ease-in-out;
    display: flex;
    flex-direction: column;
    justify-content: center;
    overflow-y: scroll;
  }
  .js-open > .wrapper--navigation__content {
    height: calc(100vh - 3.75rem);
    background-color: #FFFFFF;
  }
  .wrapper--headers {
    position: relative;
  }
  .nav--language-interface {
    position: absolute;
    top: 0;
    right: 1.875rem;
    z-index: 1;
  }
  .block--region-header_top.block--search {
    position: fixed;
    bottom: 0;
    right: 0;
    z-index: 920;
  }
}
@media (min-width: 768px) {
  .header--primary > .container {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
  .header--primary > .container:after {
    display: none;
  }
  .header--primary .header__section--primary,
  .header--primary .header__section--secondary,
  .header--primary .nav-section,
  .header--primary ul {
    display: inline-flex;
  }
  .header--primary .menu--main li {
    display: flex;
    align-items: center;
  }
  .header--primary .menu--main li a {
    color: #3232FF;
    padding: 0rem 0.625rem;
    font-size: 0.9375rem;
    line-height: 1.2980769231rem;
    font-weight: 500;
  }
}
@media (min-width: 768px) and (min-width: 940px) {
  .header--primary .menu--main li a {
    font-size: 1.125rem;
    line-height: 1.5576923077rem;
    padding: 0rem 0.9375rem;
  }
}
@media (min-width: 768px) {
  .header--primary .menu--main li a:hover {
    color: #31D57C;
  }
  .header--primary .menu--main li a.menu__link--active {
    color: #120B47;
  }
  .header--primary .menu--main li:last-child {
    margin-left: 0.625rem;
  }
}
@media (min-width: 768px) and (min-width: 940px) {
  .header--primary .menu--main li:last-child {
    margin-left: 0.9375rem;
  }
}
@media (min-width: 768px) {
  .header--primary .menu--main li:last-child a {
    cursor: pointer;
    display: inline-block;
    font-size: 1.125rem;
    line-height: 2rem;
    font-weight: 400;
    padding: 0.75rem 1.875rem;
    text-align: center;
    text-decoration: none;
    background: #31D57C;
    background-repeat: no-repeat;
    border-radius: 500px;
    outline: none;
    transition: background 0.3s ease-in-out, color 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
    padding: 0.5625rem 0.875rem;
    font-size: 0.75rem;
    line-height: 0.875rem;
    font-size: 0.9375rem;
    line-height: 1.2980769231rem;
  }
  .header--primary .menu--main li:last-child a, .header--primary .menu--main li:last-child a:visited {
    color: #FFFFFF;
  }
  .header--primary .menu--main li:last-child a:hover, .header--primary .menu--main li:last-child a:active {
    color: #FFFFFF;
    background: #1f9a58;
    outline: none;
  }
  .header--primary .menu--main li:last-child a:focus, .header--primary .menu--main li:last-child a:focus:hover {
    outline: 0;
  }
  .header--primary .menu--main li:last-child a.disabled, .header--primary .menu--main li:last-child a:disabled, .header--primary .menu--main li:last-child a[disabled] {
    pointer-events: none;
    cursor: default;
    opacity: 0.5;
  }
}
@media (min-width: 768px) and (min-width: 940px) {
  .header--primary .menu--main li:last-child a {
    font-size: 1.125rem;
    line-height: 1.5576923077rem;
    cursor: pointer;
    display: inline-block;
    font-size: 1.125rem;
    line-height: 2rem;
    font-weight: 400;
    padding: 0.75rem 1.875rem;
    text-align: center;
    text-decoration: none;
    background: #31D57C;
    background-repeat: no-repeat;
    border-radius: 500px;
    outline: none;
    transition: background 0.3s ease-in-out, color 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
  }
  .header--primary .menu--main li:last-child a, .header--primary .menu--main li:last-child a:visited {
    color: #FFFFFF;
  }
  .header--primary .menu--main li:last-child a:hover, .header--primary .menu--main li:last-child a:active {
    color: #FFFFFF;
    background: #1f9a58;
    outline: none;
  }
  .header--primary .menu--main li:last-child a:focus, .header--primary .menu--main li:last-child a:focus:hover {
    outline: 0;
  }
  .header--primary .menu--main li:last-child a.disabled, .header--primary .menu--main li:last-child a:disabled, .header--primary .menu--main li:last-child a[disabled] {
    pointer-events: none;
    cursor: default;
    opacity: 0.5;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
