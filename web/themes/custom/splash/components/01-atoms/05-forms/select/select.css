/* stylelint-disable */
/**
 * Square mixin
 *
 * @param [Number] $dimensions = the height and width of the element
 */
.h1,
.h2,
.h3,
.h4,
.h5,
.h6 {
  font-family: "Barlow Semi Condensed", "Arial";
  font-weight: 500;
}
.h1 a,
.h1 a:visited,
.h2 a,
.h2 a:visited,
.h3 a,
.h3 a:visited,
.h4 a,
.h4 a:visited,
.h5 a,
.h5 a:visited,
.h6 a,
.h6 a:visited {
  color: #31D57C;
  text-decoration: none;
}
.h1 a:hover,
.h2 a:hover,
.h3 a:hover,
.h4 a:hover,
.h5 a:hover,
.h6 a:hover {
  color: #31D57C;
  text-decoration: underline;
}

h1,
.h1 {
  margin: 0 0 1rem 0;
  font-size: 5rem;
  line-height: 6rem;
  color: #3232FF;
}

h2,
.h2 {
  margin: 0 0 0.9375rem 0;
  font-size: 3rem;
  line-height: 4rem;
  color: #3232FF;
}

h3,
.h3 {
  margin: 0 0 0.9375rem 0;
  font-size: 2rem;
  line-height: 2.5rem;
  color: #3232FF;
}

h4,
.h4 {
  margin: 0 0 0.9375rem 0;
  font-size: 1.5rem;
  line-height: 2rem;
  color: #3232FF;
}

h5, h6,
.h5,
.h6 {
  margin: 0 0 0.3125rem 0;
  font-size: 1.125rem;
  line-height: 2rem;
  color: #303030;
}

select {
  display: block;
  height: 2.75rem;
  line-height: 2.625rem;
  width: 100%;
  padding: 0 2.5rem 0 0.625rem;
  color: #303030;
  background-image: linear-gradient(45deg, transparent 50%, #303030 50%), linear-gradient(135deg, #303030 50%, transparent 50%);
  background-position: calc(100% - 20px) 18px, calc(100% - 15px) 18px, calc(100% - 2.5em) 8px;
  background-size: 5px 5px, 5px 5px, 1px 1.5em;
  background-repeat: no-repeat;
  border: 1px solid #D1D1D1;
  border-radius: 0;
  appearance: none;
}
select::-ms-expand {
  display: none;
}
select:focus, select:focus:hover {
  color: #31D57C;
  border-color: #5bde97;
  outline: 0;
}
select:disabled, select[disabled] {
  color: #E5E5E5;
  border-color: #E5E5E5;
  background: #FFFFFF;
  border-style: dashed;
  opacity: 0.5;
}

.form-item__dropdown {
  position: relative;
}
.form-item__dropdown select {
  background-image: none;
}
.form-item__dropdown:after {
  content: '\f078';
  color: #A2A2A2;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  display: inline-block;
  font-style: normal;
  font-variant: normal;
  font-weight: normal;
  line-height: 1;
  text-rendering: auto;
  vertical-align: middle;
  font-size: 0.875rem;
  font-family: "Font Awesome 5 Pro";
  font-weight: 900;
}
.form-item__dropdown:after {
  pointer-events: none;
  position: absolute;
  right: 10px;
  top: 50%;
  transform: translateY(-50%);
}

form .select2-container--default .select2-selection--multiple {
  min-height: 0;
  line-height: 0;
  padding: 1.4375rem 1.25rem 0.375rem 1.25rem;
  border: 1px solid #D1D1D1;
  border-radius: 0;
}
form .select2-container--default .select2-selection--multiple .select2-selection__rendered {
  margin-left: -0.3125rem;
}
form .select2-container--default .select2-selection--multiple .select2-selection__rendered li {
  margin-bottom: 0;
}
form .select2-container--default .select2-selection--multiple .select2-selection__rendered li.select2-selection__choice {
  line-height: 1.5;
}
form .select2-container--default .select2-selection--multiple input[type=search] {
  padding: 0 !important;
  margin: 0 !important;
  border: 0 none !important;
}
form .select2-container--default.select2-container--focus .select2-selection--multiple {
  border-color: #5bde97;
}
form .select2-container--default.select2-container--disabled .select2-selection--multiple {
  border-color: #E5E5E5;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
