/* stylelint-disable */
.h1,
.h2,
.h3,
.h4,
.h5,
.h6 {
  font-family: "Barlow Semi Condensed", "Arial";
  font-weight: 700; }
  .h1 a,
  .h1 a:visited,
  .h2 a,
  .h2 a:visited,
  .h3 a,
  .h3 a:visited,
  .h4 a,
  .h4 a:visited,
  .h5 a,
  .h5 a:visited,
  .h6 a,
  .h6 a:visited {
    color: #31D57C;
    text-decoration: none; }
  .h1 a:hover,
  .h2 a:hover,
  .h3 a:hover,
  .h4 a:hover,
  .h5 a:hover,
  .h6 a:hover {
    color: #31D57C;
    text-decoration: underline; }

h1,
.h1 {
  margin: 0 0 2rem 0;
  font-size: 5rem;
  line-height: 6rem;
  color: #3232FF; }

h2,
.h2 {
  margin: 0 0 0.9375rem 0;
  font-size: 3rem;
  line-height: 4rem;
  color: #3232FF; }

h3,
.h3 {
  margin: 0 0 0.9375rem 0;
  font-size: 2rem;
  line-height: 2.5rem;
  color: #3232FF; }

h4,
.h4 {
  margin: 0 0 0.9375rem 0;
  font-size: 1.5rem;
  line-height: 2rem;
  color: #3232FF; }

h5, h6,
.h5,
.h6 {
  margin: 0 0 0.3125rem 0;
  font-size: 1.125rem;
  line-height: 2rem;
  color: #303030; }

img {
  vertical-align: middle;
  border-style: none;
  display: block;
  max-width: 100%;
  height: auto; }

.text-long:after {
  clear: both;
  content: '';
  display: table; }

.text-long img, .text-long img.align-left, .text-long img.align-right, .text-long img.align-center,
.text-long figure,
.text-long figure.align-left,
.text-long figure.align-right,
.text-long figure.align-center {
  float: none;
  display: block;
  margin: 0 0 1.875rem 0;
  max-width: 100%;
  width: auto;
  height: auto; }

@media (min-width: 768px) {
  .text-long img.align-left,
  .text-long figure.align-left {
    float: left;
    margin: 0 1.875rem 1.875rem 0; }
  .text-long img.align-right,
  .text-long figure.align-right {
    float: right;
    margin: 0 0 1.875rem 1.875rem; }
  .text-long img.align-center,
  .text-long figure.align-center {
    margin-left: auto;
    margin-right: auto; } }

.text-long figure.align-center img {
  margin: 0 auto; }

.text-long figure img {
  float: none;
  padding: 0; }

.text-long figcaption {
  margin-top: 0.625rem;
  display: block;
  text-align: center;
  font-style: italic;
  color: #707070; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BsYXNoL2NvbXBvbmVudHMvMDEtYXRvbXMvMDQtaW1hZ2VzL2ltYWdlLmNzcyIsInNvdXJjZXMiOlsic3BsYXNoL2NvbXBvbmVudHMvMDEtYXRvbXMvMDQtaW1hZ2VzL2ltYWdlLnNjc3MiLCJzcGxhc2gvY29tcG9uZW50cy8wMS1hdG9tcy8wNC1pbWFnZXMvX2ltYWdlLWhlbHBlcnMuc2NzcyIsInNwbGFzaC9jb21wb25lbnRzL19pbmNsdWRlcy5zY3NzIiwic3BsYXNoL2NvbXBvbmVudHMvMDAtYmFzZS9fdmFycy5zY3NzIiwic3BsYXNoL2NvbXBvbmVudHMvMDAtYmFzZS9fY29sb3JzLnNjc3MiLCJzcGxhc2gvY29tcG9uZW50cy8wMC1iYXNlL19ncmlkLnNjc3MiLCJzcGxhc2gvY29tcG9uZW50cy8wMC1iYXNlL19icmVha3BvaW50cy5zY3NzIiwic3BsYXNoL2NvbXBvbmVudHMvMDAtYmFzZS9fZnVuY3Rpb25zLnNjc3MiLCJzcGxhc2gvY29tcG9uZW50cy8wMC1iYXNlL19taXhpbnMuc2NzcyIsInNwbGFzaC9jb21wb25lbnRzLzAwLWJhc2UvX2xheW91dC5zY3NzIiwic3BsYXNoL2NvbXBvbmVudHMvMDAtYmFzZS9fdHlwb2dyYXBoeS5zY3NzIiwic3BsYXNoL2NvbXBvbmVudHMvMDAtYmFzZS9fZ3JpZC9fMDAtZ3JpZC1mbGV4LnNjc3MiXSwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCBcIl9pbWFnZS1oZWxwZXJzLnNjc3NcIjtcblxuLy8gKiBJbWFnZSB0YWdcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmltZyB7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIEBpbmNsdWRlIGltZy1yZXNwb25zaXZlKCk7XG59XG5cblxuLy8gKiBJbWFnZXMgaW4gQ0tFXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4udGV4dC1sb25nIHtcblxuICBAaW5jbHVkZSBjbGVhcmZpeDtcblxuICAvLyAtLSBhbGlnbm1lbnQgYW5kIHNpemluZyByZXNwb25zaXZlXG4gIGltZyxcbiAgZmlndXJlIHtcbiAgICAmLFxuICAgICYuYWxpZ24tbGVmdCxcbiAgICAmLmFsaWduLXJpZ2h0LFxuICAgICYuYWxpZ24tY2VudGVyIHtcbiAgICAgIGZsb2F0OiBub25lO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBtYXJnaW46IDAgMCByZW0oJGdyaWQtZ2FwLWhvcikgMDtcbiAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgIH1cblxuICAgIEBpbmNsdWRlIGJwLXNtIHtcbiAgICAgICYuYWxpZ24tbGVmdCB7XG4gICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICBtYXJnaW46IDAgcmVtKCgkZ3JpZC1nYXAtaG9yKSkgcmVtKCgkZ3JpZC1nYXAtaG9yKSkgMDtcbiAgICAgIH1cblxuICAgICAgJi5hbGlnbi1yaWdodCB7XG4gICAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgICAgbWFyZ2luOiAwIDAgcmVtKCgkZ3JpZC1nYXAtaG9yKSkgcmVtKCgkZ3JpZC1nYXAtaG9yKSk7XG4gICAgICB9XG5cbiAgICAgICYuYWxpZ24tY2VudGVyIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBmaWd1cmUge1xuXG4gICAgJi5hbGlnbi1jZW50ZXIge1xuICAgICAgaW1nIHtcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICB9XG4gICAgfVxuXG4gICAgaW1nIHtcbiAgICAgIC8vIHJlc2V0IGZvciBuZXN0ZWQgaW1nIGluIGZpZ3VyZVxuICAgICAgZmxvYXQ6IG5vbmU7XG4gICAgICBwYWRkaW5nOiAwO1xuICAgIH1cbiAgfVxuXG4gIGZpZ2NhcHRpb24ge1xuICAgIG1hcmdpbi10b3A6IHJlbSgxMCk7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgICBjb2xvcjogJGNvbG9yLWdyYXk7XG4gIH1cbn1cbiIsIkBpbXBvcnQgXCIuLi8uLi9pbmNsdWRlc1wiO1xuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gKlxuLy8gKiBJbWFnZXM6IGhlbHBlcnNcbi8vICpcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cblxuLy8gKiBNaXhpbnNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vICoqIEltYWdlIGV4dGVuZGFibGU6IHNldCBpbWFnZSB3aWR0aCB0byAxMDAlIGFuZCBoZWlnaHQgdG8gYXV0b1xuLy8gLS0gVVNBR0U6IEBpbmNsdWRlIGltZy1yZXNwb25zaXZlKCkgICAgICB3aXRob3V0IHBhcmFtLCB1c2VzIHdpZHRoXG4vLyAtLSBVU0FHRTogQGluY2x1ZGUgaW1nLXJlc3BvbnNpdmUodHJ1ZSkgIHNldCBwYXJhbSB0byB0cnVlIHRvIHVzZSBtYXgtd2lkdGggaW5zdGVhZFxuXG5AbWl4aW4gaW1nLXJlc3BvbnNpdmUoJG1heDogdHJ1ZSkge1xuICBAaWYgKCRtYXggPT0gZmFsc2UpIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfSBAZWxzZSB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICB9XG4gIGhlaWdodDogYXV0bztcbn1cbiIsIkBpbXBvcnQgXCIwMC1iYXNlL3ZhcnNcIjtcbkBpbXBvcnQgXCIwMC1iYXNlL2NvbG9yc1wiO1xuQGltcG9ydCBcIjAwLWJhc2UvZ3JpZFwiO1xuQGltcG9ydCBcIjAwLWJhc2UvYnJlYWtwb2ludHNcIjtcbkBpbXBvcnQgXCIwMC1iYXNlL2Z1bmN0aW9uc1wiO1xuQGltcG9ydCBcIjAwLWJhc2UvbWl4aW5zXCI7XG5AaW1wb3J0IFwiMDAtYmFzZS9sYXlvdXRcIjtcbkBpbXBvcnQgXCIwMC1iYXNlL3R5cG9ncmFwaHlcIjtcblxuQGltcG9ydCBcIjAwLWJhc2UvX2dyaWQvXzAwLWdyaWQtZmxleFwiO1xuLy8gQGltcG9ydCBcIjAwLWJhc2UvX2dyaWQvX3NldC1icmVha3BvaW50c1wiO1xuLy8gQGltcG9ydCBcIjAwLWJhc2UvX2dyaWQvX3NldC12aXN1YWwtZ3JpZFwiO1xuIiwiLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIEFuaW1hdGlvblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiRkdXJhdGlvbjogMC4zcztcbiRlYXNpbmc6IGVhc2UtaW4tb3V0O1xuJGVhc2luZy1pbjogZWFzZS1pbjtcbiRlYXNpbmctb3V0OiBlYXNlLW91dDtcbiIsIi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBWYXJpYWJsZXM6IGJhc2ljIGNvbG9yc1xuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuJGNvbG9yLXdoaXRlOiAgICAgICAgICAgICAgICAjRkZGRkZGO1xuJGNvbG9yLW9mZi13aGl0ZTogICAgICAgICAgICAjRjNGM0YzO1xuJGNvbG9yLWdyYXktbGlnaHQtMTogICAgICAgICAjRTVFNUU1O1xuJGNvbG9yLWdyYXktbGlnaHQtMjogICAgICAgICAjRDFEMUQxO1xuJGNvbG9yLWdyYXktbGlnaHQtMzogICAgICAgICAjQTJBMkEyO1xuJGNvbG9yLWdyYXk6ICAgICAgICAgICAgICAgICAjNzA3MDcwO1xuJGNvbG9yLWdyYXktZGFyazogICAgICAgICAgICAjNTQ1NDU0O1xuJGNvbG9yLWJsYWNrOiAgICAgICAgICAgICAgICAjMDAwO1xuXG4kY29sb3Itc3BvdC0xOiAgICAgICAgICAgICAgICMzMUQ1N0MgIWRlZmF1bHQ7XG4kY29sb3Itc3BvdC0yOiAgICAgICAgICAgICAgICMzMjMyRkYgIWRlZmF1bHQ7XG4kY29sb3Itc3BvdC0zOiAgICAgICAgICAgICAgICMxMjBCNDcgIWRlZmF1bHQ7XG4kY29sb3Itc3BvdC00OiAgICAgICAgICAgICAgICNGOTc3NzcgIWRlZmF1bHQ7XG5cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBNYWluXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuJGNvbG9yLWJhc2U6ICAgICAgICAgICAgICAgICMzMDMwMzA7XG4kY29sb3ItYmFzZS1iZzogICAgICAgICAgICAgJGNvbG9yLXdoaXRlO1xuXG4kY29sb3ItaGVhZGluZzogICAgICAgICAgICAgJGNvbG9yLXNwb3QtMjtcblxuJGNvbG9yLWxpbms6ICAgICAgICAgICAgICAgICRjb2xvci1zcG90LTEgIWRlZmF1bHQ7XG4kY29sb3ItbGluay1ob3ZlciA6ICAgICAgICAgJGNvbG9yLXNwb3QtMTtcbiRjb2xvci1saW5rLWFjdGl2ZTogICAgICAgICAkY29sb3Itc3BvdC0xICFkZWZhdWx0O1xuXG4kY29sb3ItdGV4dC1saW5rOiAgICAgICAgICAgJGNvbG9yLXNwb3QtMSAhZGVmYXVsdDtcbiRjb2xvci10ZXh0LWxpbmstaG92ZXIgOiAgICAkY29sb3Itc3BvdC0xO1xuJGNvbG9yLXRleHQtbGluay1hY3RpdmU6ICAgICRjb2xvci1zcG90LTEgIWRlZmF1bHQ7XG5cbiRjb2xvci1idXR0b246ICAgICAgICAgICAgICAkY29sb3Itd2hpdGU7XG4kY29sb3ItYnV0dG9uLWJnOiAgICAgICAgICAgJGNvbG9yLXNwb3QtMTtcbiRjb2xvci1idXR0b24taG92ZXI6ICAgICAgICAkY29sb3Itd2hpdGU7XG4kY29sb3ItYnV0dG9uLWhvdmVyLWJnOiAgICAgZGFya2VuKCRjb2xvci1zcG90LTEsIDE1JSkgIWRlZmF1bHQ7XG5cbiRjb2xvci1ib3JkZXI6ICAgICAgICAgICAgICAkY29sb3ItZ3JheS1saWdodC0yO1xuXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gUmVnaW9uc1xuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiRjb2xvci1oZWFkZXItdG9wLWJnOiAgICAgICAkY29sb3Itb2ZmLXdoaXRlO1xuJGNvbG9yLW5hdmlnYXRpb24tYmc6ICAgICAgICRjb2xvci1zcG90LTE7XG4kY29sb3ItbW9iaWxlLW5hdjogICAgICAgICAgJGNvbG9yLWJhc2U7XG4kY29sb3ItbW9iaWxlLW5hdi1iZzogICAgICAgJGNvbG9yLWJhc2UtYmc7XG4kY29sb3ItbW9iaWxlLW5hdi1vcGVuOiAgICAgJGNvbG9yLXNwb3QtMTtcbiRjb2xvci1tb2JpbGUtbmF2LW9wZW4tYmc6ICAkY29sb3Itd2hpdGU7XG4kY29sb3ItZG9vcm1hdDogICAgICAgICAgICAgJGNvbG9yLWdyYXktbGlnaHQtMTtcbiRjb2xvci1kb29ybWF0LWJnOiAgICAgICAgICAjMTIwQjQ3O1xuJGNvbG9yLWZvb3RlcjogICAgICAgICAgICAgICRjb2xvci13aGl0ZTtcbiRjb2xvci1mb290ZXItYmc6ICAgICAgICAgICAjMDYwMDMyO1xuXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gVGFic1xuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiRjb2xvci10YWJzLWJhY2tncm91bmQ6ICAgJGNvbG9yLWJsYWNrO1xuJGNvbG9yLXRhYnMtdGV4dDogICAgICAgICAkY29sb3Itd2hpdGU7XG4kY29sb3ItdGFicy1ob3ZlcjogICAgICAgICRjb2xvci1zcG90LTE7XG5cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBBbGVydHNcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4kY29sb3ItZXJyb3I6ICAgICAgICAgICAgICNFNzRDM0M7XG4kY29sb3ItZXJyb3ItZGFyazogICAgICAgICNDMDM5MkI7XG4kY29sb3Itc3RhdHVzOiAgICAgICAgICAgICMzRkMzODA7XG4kY29sb3Itc3RhdHVzLWRhcms6ICAgICAgICMwMEIxNkE7XG4kY29sb3Itd2FybmluZzogICAgICAgICAgICNFQjk1MzI7XG4kY29sb3Itd2FybmluZy1kYXJrOiAgICAgICNGMjc4NEI7XG4kY29sb3ItbmV1dHJhbDogICAgICAgICAgICMwMDc0QkQ7XG5cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBGb3Jtc1xuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiRjb2xvci1wbGFjZWhvbGRlcjogICAgICAgICAgJGNvbG9yLWdyYXktbGlnaHQtMjtcbiRjb2xvci1mb3JtOiAgICAgICAgICAgICAgICAgJGNvbG9yLWJhc2U7XG4kY29sb3ItZm9ybS1ib3JkZXI6ICAgICAgICAgICRjb2xvci1ib3JkZXI7XG4kY29sb3ItZm9ybS1hY3RpdmU6ICAgICAgICAgICRjb2xvci1zcG90LTEgIWRlZmF1bHQ7XG4kY29sb3ItZm9ybS1hY3RpdmUtYm9yZGVyOiAgIGxpZ2h0ZW4oJGNvbG9yLXNwb3QtMSwgMTApO1xuJGNvbG9yLWZvcm0tZGlzYWJsZWQ6ICAgICAgICAkY29sb3ItZ3JheS1saWdodC0xO1xuJGNvbG9yLWZvcm0tZGlzYWJsZWQtYmc6ICAgICAkY29sb3Itd2hpdGU7XG4kY29sb3ItZm9ybS1kaXNhYmxlZC1ib3JkZXI6ICRjb2xvci1ncmF5LWxpZ2h0LTE7XG4kY29sb3ItZm9ybS1lcnJvci1ib3JkZXI6ICAgICRjb2xvci1lcnJvcjtcbiIsIi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyAqXG4vLyAqIFZhcnM6IGdyaWRcbi8vICpcbi8vICpcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cblxuLy8gKiBHcmlkIHNldHRpbmdzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4kZ3JpZC1jb2x1bW5zOiAxMjtcbiRnYXAtaG9yOiAzMDtcblxuXG4vLyB1c3VhbGx5IHRoZSBzYW1lIGFzIHRoZSBiYXNpYyBnYXAsIGNoYW5nZSBoZXJlIGlmIHlvdSBuZWVkIGl0IHRvIGJlIGRpZmZlcmVudFxuJGdyaWQtZ2FwLWhvcjogJGdhcC1ob3I7IC8vIGd1dHRlciwgb3IgZ2FwIGJldHdlZW4gY29sdW1uc1xuJGdyaWQtZ2FwLXZlcnQ6ICRnYXAtaG9yOyAvLyBnYXAgYmV0d2VlbiByb3dzXG5cbi8vIGZvciBjb250YWluZXIgc2l6aW5nXG4kbWF4LXdpZHRoOiAxMjAwcHg7XG4kbWF4LXdpZHRoLW1kOiAkbWF4LXdpZHRoO1xuJG1heC13aWR0aC1zbTogOTQwcHg7XG4kbWF4LXdpZHRoLXhzOiBub25lO1xuXG5cbi8vICogVmlzdWFsIEdyaWQgKGZvciBkZWJ1ZyBwdXJwb3Nlcylcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIC0tIFNob3cgdmlzdWFsIGJyZWFrcG9pbnQgaW5kaWNhdG9ycyBpZiB0cnVlXG4kdmlzdWFsLWluZGljYXRvcnM6IGZhbHNlO1xuXG4vLyAtLSBTaG93IGdyaWQgb3ZlcmxheSBpZiB0cnVlXG4kdmlzdWFsLWdyaWQ6IGZhbHNlO1xuXG4vLyAtLSBHcmlkIG1vcmUgc2V0dGluZ3NcbiR2aXN1YWwtZ3JpZC1jb2xvcjogcmVkO1xuJHZpc3VhbC1ncmlkLWluZGV4OiBmcm9udDsgLy8gb3IgYmFja1xuJHZpc3VhbC1ncmlkLW9wYWNpdHk6IDAuNTtcbiIsIi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBCcmVha3BvaW50cy5cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4kYnAteHM6IDMyMHB4O1xuJGJwLXhzLXNtYWxsOiAkYnAteHM7XG4kYnAteHMtc21hbGwtbWF4OiA0NzlweDtcbiRicC14cy13aWRlOiA0ODBweDtcbiRicC14cy1tYXg6IDc2N3B4O1xuJGJwLXhzLXdpZGUtbWF4OiAkYnAteHMtbWF4O1xuJGJwLXNtOiA3NjhweDtcbiRicC1zbS1tYXg6IDkzOXB4O1xuJGJwLW1kOiA5NDBweDtcbiRicC1tZC1tYXg6IDEyMDBweDtcbiRicC1sZzogMTIwMXB4O1xuJGJwLXhsOiAxOTIwcHg7XG4iLCJcbi8vIENvbnZlcnQgcGl4ZWxzIHRvIHJlbXNcbi8vIGVnLiBmb3IgYSByZWxhdGlvbmFsIHZhbHVlIG9mIDEycHggd3JpdGUgcmVtKDEyKVxuLy8gQXNzdW1lcyAkcmVtLWJhc2UgaXMgdGhlIGZvbnQtc2l6ZSBvZiA8aHRtbD5cbi8vIGlmIHlvdSBjaGFuZ2UgdGhlICRyZW0tYmFzZSwgeW91J2xsIGdldCBkaWZmZXJlbnQgY2FsY3VsYXRpb25zIG9mIGNvdXJzZVxuLy8gZWcuIGJhc2UgMTBweCA9PiBhZGRpbmcgcmVtKDEwKSA9PiAxMC8xMCA9IDFyZW1cblxuQGZ1bmN0aW9uIHJlbSgkcHh2YWwpIHtcbiAgQGlmIG5vdCB1bml0bGVzcygkcHh2YWwpIHtcbiAgICAkcHh2YWw6IHN0cmlwLXVuaXQoJHB4dmFsKTtcbiAgfVxuXG4gICRiYXNlOiAkcmVtLWJhc2U7XG4gIEBpZiBub3QgdW5pdGxlc3MoJGJhc2UpIHtcbiAgICAkYmFzZTogc3RyaXAtdW5pdCgkYmFzZSk7XG4gIH1cblxuICBAcmV0dXJuICgkcHh2YWwgLyAkYmFzZSkgKiAxcmVtO1xufVxuXG5cbi8vICogU29tZSBoYW5keSBmdW5jdGlvbnNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vLyBTdHJpcHMgdGhlIHVuaXQgZnJvbSBhIG51bWJlci5cbi8vL1xuLy8vIEBwYXJhbSB7TnVtYmVyIChXaXRoIFVuaXQpfSAkdmFsdWVcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBVc2FnZVxuLy8vICAgJGRpbWVuc2lvbjogc3RyaXAtdW5pdCgxMGVtKTtcbi8vL1xuLy8vIEBleGFtcGxlIGNzcyAtIENTUyBPdXRwdXRcbi8vLyAgICRkaW1lbnNpb246IDEwO1xuLy8vXG4vLy8gQHJldHVybiB7TnVtYmVyIChVbml0bGVzcyl9XG5cbkBmdW5jdGlvbiBzdHJpcC11bml0KCR2YWx1ZSkge1xuICBAcmV0dXJuICgkdmFsdWUgLyAoJHZhbHVlICogMCArIDEpKTtcbn1cblxuLy8vIEJ1aWxkcyB0aGUgYHNyY2AgbGlzdCBmb3IgYW4gYEBmb250LWZhY2VgIGRlY2xhcmF0aW9uLlxuLy8vXG4vLy8gQGxpbmsgaHR0cHM6Ly9nb28uZ2wvUnUxYktQXG4vLy9cbi8vLyBAYXJndW1lbnQge3N0cmluZ30gJGZvbnQtZmFtaWx5XG4vLy9cbi8vLyBAYXJndW1lbnQge3N0cmluZ30gJGZpbGUtcGF0aFxuLy8vXG4vLy8gQHJldHVybiB7bGlzdH1cbi8vL1xuLy8vIEByZXF1aXJlIHtmdW5jdGlvbn0gX2NvbnRhaW5zXG4vLy9cbi8vLyBAYWNjZXNzIHByaXZhdGVcblxuQGZ1bmN0aW9uIF9mb250LXNvdXJjZS1kZWNsYXJhdGlvbihcbiAgJGZvbnQtZmFtaWx5LFxuICAkZmlsZS1wYXRoXG4pIHtcbiAgJHNyYzogKCk7XG5cbiAgJGZpbGUtZm9ybWF0czogKCdzdmcnLCAndHRmJywgJ3dvZmYyJywgJ3dvZmYnLCAnZW90Jyk7XG5cbiAgJGZvcm1hdHMtbWFwOiAoXG4gICAgZW90OiAgICcjeyRmaWxlLXBhdGh9LmVvdD8jaWVmaXgnIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcbiAgICB3b2ZmMjogJyN7JGZpbGUtcGF0aH0ud29mZjInIGZvcm1hdCgnd29mZjInKSxcbiAgICB3b2ZmOiAgJyN7JGZpbGUtcGF0aH0ud29mZicgZm9ybWF0KCd3b2ZmJyksXG4gICAgdHRmOiAgICcjeyRmaWxlLXBhdGh9LnR0ZicgZm9ybWF0KCd0cnVldHlwZScpLFxuICAgIHN2ZzogICAnI3skZmlsZS1wYXRofS5zdmcjI3skZm9udC1mYW1pbHl9JyBmb3JtYXQoJ3N2ZycpLFxuICApO1xuXG4gIEBlYWNoICRrZXksICR2YWx1ZXMgaW4gJGZvcm1hdHMtbWFwIHtcbiAgICBAaWYgX2NvbnRhaW5zKCRmaWxlLWZvcm1hdHMsICRrZXkpIHtcbiAgICAgICRmaWxlLXBhdGg6IG50aCgkdmFsdWVzLCAxKTtcbiAgICAgICRmb250LWZvcm1hdDogbnRoKCR2YWx1ZXMsIDIpO1xuXG4gICAgICAkc3JjOiBhcHBlbmQoJHNyYywgdXJsKCRmaWxlLXBhdGgpICRmb250LWZvcm1hdCwgY29tbWEpO1xuICAgIH1cbiAgfVxuXG4gIEByZXR1cm4gJHNyYztcbn1cbiIsIi8vICpcbi8vICogRm9udC1hd2Vzb21lIG1peGluOiBhZGQgYSBmb250LWF3ZXNvbWUgaWNvbiBiZWZvcmUgb3IgYWZ0ZXIgYW4gZWxlbWVudFxuLy9cbi8vICogTk9URTogYmVmb3JlIGlzIGRlZmF1bHQsIG1hcmdpbiBpcyBkZWZhdWx0IDAuXG4vL1xuLy8gKiBTZXR0aW5ncyB2aWEgYW4gb2JqZWN0LCBjb250YWluaW5nOlxuLy8gKiAkcG9zaXRpb246YmVmb3JlLFxuLy8gKiAkbGVmdCxcbi8vICogJHRvcCxcbi8vICogJHR5cGU6J3JlZ3VsYXInLFxuLy8gKiAkaWNvbjogZWcuIGEgZm9udGF3ZXNvbWUgdmFyaWFibGUsXG4vLyAqICRjb2xvcixcbi8vICogJHNpemUsXG4vLyAqICRhbGlnbjptaWRkbGUsXG4vLyAqICRtYXJnaW4uLi5cbi8vXG4vLyAqIFVTQUdFOlxuLy8gKiAkaGFtYnVyZ2VySWNvbjogKGljb246ICRmYS12YXItaGFtYnVyZ2VyLCBjb2xvcjogJGNvbG9yLXdoaXRlLCBzaXplOiAyMXB4KTtcbi8vICogQGluY2x1ZGUgZm9udC1hd2Vzb21lKCRoYW1idXJnZXJJY29uKTtcblxuQG1peGluIGZvbnQtYXdlc29tZSgkc2V0dGluZ3MpIHtcblxuICAvLyBzZXQgdmFyaWFibGVzXG4gICRlbGVtZW50OiBtYXAtZ2V0KCRzZXR0aW5ncywgZWxlbWVudCk7XG4gICRwb3NpdGlvbjogbWFwLWdldCgkc2V0dGluZ3MsIHBvc2l0aW9uKTtcbiAgJGxlZnQ6IG1hcC1nZXQoJHNldHRpbmdzLCBsZWZ0KTtcbiAgJHJpZ2h0OiBtYXAtZ2V0KCRzZXR0aW5ncywgcmlnaHQpO1xuICAkdG9wOiBtYXAtZ2V0KCRzZXR0aW5ncywgdG9wKTtcbiAgJGJvdHRvbTogbWFwLWdldCgkc2V0dGluZ3MsIGJvdHRvbSk7XG5cbiAgQGlmICgkZWxlbWVudCA9PSAnYWZ0ZXInIG9yICRlbGVtZW50ID09ICc6YWZ0ZXInIG9yICRlbGVtZW50ID09ICc6OmFmdGVyJykge1xuICAgICY6YWZ0ZXIge1xuICAgICAgQGlmKCRwb3NpdGlvbiAhPSBudWxsKSB7XG4gICAgICAgIHBvc2l0aW9uOiAkcG9zaXRpb247XG4gICAgICB9XG4gICAgICBAaWYoJGxlZnQgIT0gbnVsbCkge1xuICAgICAgICBsZWZ0OiAkbGVmdDtcbiAgICAgIH1cbiAgICAgIEBlbHNlIGlmKCRsZWZ0ID09IG51bGwgYW5kICRyaWdodCAhPSBudWxsKSB7XG4gICAgICAgIHJpZ2h0OiAkcmlnaHQ7XG4gICAgICB9XG4gICAgICBAaWYoJHRvcCAhPSBudWxsKSB7XG4gICAgICAgIHRvcDogJHRvcDtcbiAgICAgIH1cbiAgICAgIEBlbHNlIGlmKCR0b3AgPT0gbnVsbCBhbmQgJGJvdHRvbSAhPSBudWxsKSB7XG4gICAgICAgIGJvdHRvbTogJGJvdHRvbTtcbiAgICAgIH1cbiAgICAgIEBpbmNsdWRlIGZvbnQtYXdlc29tZS1wc2V1ZG8oJHNldHRpbmdzKTtcbiAgICB9XG4gIH0gQGVsc2Uge1xuICAgICY6YmVmb3JlIHtcbiAgICAgIEBpZigkcG9zaXRpb24gIT0gbnVsbCkge1xuICAgICAgICBwb3NpdGlvbjogJHBvc2l0aW9uO1xuICAgICAgfVxuICAgICAgQGlmKCRsZWZ0ICE9IG51bGwpIHtcbiAgICAgICAgbGVmdDogJGxlZnQ7XG4gICAgICB9XG4gICAgICBAZWxzZSBpZigkbGVmdCA9PSBudWxsIGFuZCAkcmlnaHQgIT0gbnVsbCkge1xuICAgICAgICByaWdodDogJHJpZ2h0O1xuICAgICAgfVxuICAgICAgQGlmKCR0b3AgIT0gbnVsbCkge1xuICAgICAgICB0b3A6ICR0b3A7XG4gICAgICB9XG4gICAgICBAZWxzZSBpZigkdG9wID09IG51bGwgYW5kICRib3R0b20gIT0gbnVsbCkge1xuICAgICAgICBib3R0b206ICRib3R0b207XG4gICAgICB9XG4gICAgICBAaW5jbHVkZSBmb250LWF3ZXNvbWUtcHNldWRvKCRzZXR0aW5ncyk7XG4gICAgfVxuICB9XG59XG5cblxuQG1peGluIGZvbnQtYXdlc29tZS1wc2V1ZG8oJHNldHRpbmdzKSB7XG5cbiAgLy8gc2V0IHZhcmlhYmxlc1xuICAkdHlwZTogbWFwLWdldCgkc2V0dGluZ3MsIHR5cGUpO1xuICAkaWNvbjogbWFwLWdldCgkc2V0dGluZ3MsIGljb24pO1xuICAkY29sb3I6IG1hcC1nZXQoJHNldHRpbmdzLCBjb2xvcik7XG4gICRzaXplOiBtYXAtZ2V0KCRzZXR0aW5ncywgc2l6ZSk7XG4gICRhbGlnbjogbWFwLWdldCgkc2V0dGluZ3MsIGFsaWduKTtcbiAgJG1hcmdpbjogbWFwLWdldCgkc2V0dGluZ3MsIG1hcmdpbik7XG5cbiAgLy8gZm9udGF3ZXNvbWUgZGVmYXVsdHM6XG4gIC8vXG4gIC8vICRmYS1mb250LXNpemUtYmFzZTogICAgICAgICAgIDE2cHggIWRlZmF1bHQ7XG4gIC8vICRmYS1jc3MtcHJlZml4OiAgICAgICAgICAgICAgIGZhICFkZWZhdWx0O1xuICAvLyAkZmEtYm9yZGVyLWNvbG9yOiAgICAgICAgICAgICAjZWVlICFkZWZhdWx0O1xuICAvLyAkZmEtaW52ZXJzZTogICAgICAgICAgICAgICAgICAjZmZmICFkZWZhdWx0O1xuICAvLyAkZmEtbGktd2lkdGg6ICAgICAgICAgICAgICAgICAyZW0gIWRlZmF1bHQ7XG5cbiAgY29udGVudDogdW5xdW90ZSgnXFwnI3sgJGljb24gfVxcJycpO1xuICBjb2xvcjogJGNvbG9yO1xuICAkbmV3TWFyZ2luOiBpZihsZW5ndGgoJG1hcmdpbikgPT0gMCwgMHB4LCAkbWFyZ2luKTtcbiAgbWFyZ2luOiAkbmV3TWFyZ2luO1xuXG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC12YXJpYW50OiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICB0ZXh0LXJlbmRlcmluZzogYXV0bztcbiAgQGlmICgkYWxpZ24gPT0gbnVsbCkge1xuICAgIC8vIHZlcnRpY2FsLWFsaWduOiAtLjEyNWVtO1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIH0gQGVsc2Uge1xuICAgIHZlcnRpY2FsLWFsaWduOiAkYWxpZ247XG4gIH1cblxuICAvLyBzZXQgZGVmYXVsdCBzaXplXG4gIEBpZiAoJHNpemUgPT0gMTZweCBvciAkc2l6ZSA9PSAxNiBvciAkc2l6ZSA9PSBudWxsKSB7XG4gICAgJHNpemU6ICRmYS1mb250LXNpemUtYmFzZTtcbiAgfVxuXG4gIGZvbnQtc2l6ZTogcmVtKCRzaXplKTtcblxuICAvLyBzZXQgZm9udCBzdHlsZS93ZWlnaHRcbiAgQGlmICgkdHlwZSA9PSAnYnJhbmQnKSB7XG4gICAgZm9udC1mYW1pbHk6ICdGb250IEF3ZXNvbWUgNSBCcmFuZHMnO1xuICB9IEBlbHNlaWYgKCR0eXBlID09ICdyZWd1bGFyJykge1xuICAgIGZvbnQtZmFtaWx5OiAnRm9udCBBd2Vzb21lIDUgUHJvJztcbiAgICBmb250LXdlaWdodDogNDAwO1xuICB9IEBlbHNlaWYgKCR0eXBlID09ICdsaWdodCcpIHtcbiAgICBmb250LWZhbWlseTogJ0ZvbnQgQXdlc29tZSA1IFBybyc7XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgfSBAZWxzZSB7XG4gICAgLy8gc29saWRcbiAgICBmb250LWZhbWlseTogJ0ZvbnQgQXdlc29tZSA1IFBybyc7XG4gICAgZm9udC13ZWlnaHQ6IDkwMDtcbiAgfVxufVxuXG5cbi8vICoqIHVzZSBmb250LWZhY2UgdG8gZ2VuZXJhdGUgYWxsIHRoZSBkaWZmZXJlbnQgdXJsJ3MgZm9yIHRoZSB2YXJpb3VzIGZvbnQgZmlsZXNcbi8vIC0tIFVTQUdFOiBAaW5jbHVkZSBmb250LWZhY2UoRm9udEF3ZXNvbWUsICcuLi9mb250cy9mb250QXdlc29tZS9mb250YXdlc29tZS1saWdodCcsIDMwMCk7XG5cbi8qIHN0eWxlbGludC1kaXNhYmxlICovXG5AbWl4aW4gZm9udC1mYWNlKFxuICAkZm9udC1mYW1pbHksXG4gICRmaWxlLXBhdGgsXG4gICRmb250LXdlaWdodDogbm9ybWFsXG4pIHtcbiAgQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICRmb250LWZhbWlseTtcbiAgICBmb250LXdlaWdodDogJGZvbnQtd2VpZ2h0O1xuICAgIHNyYzogX2ZvbnQtc291cmNlLWRlY2xhcmF0aW9uKFxuICAgICAgICAkZm9udC1mYW1pbHksXG4gICAgICAgICRmaWxlLXBhdGhcbiAgICApO1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vICoqIEZvbnQtc2l6ZSBtaXhpbjogZWFzaWx5IHNldCBmb250LXNpemUgYW5kIGxpbmUtaGVpZ2h0IG9mIGFuIGVsZW1lbnRcbi8vIC0tIE5PVEU6IGRlZmF1bHQgZm9udC1zaXplIGlzIDEzLCBkZWZhdWx0IGxpbmUtaGVpZ2h0IGlzIDE4XG4vLyAtLSBVU0FHRTogQGluY2x1ZGUgZm9udC1zaXplKDE1LCAxOCkgKGRvbid0IHVzZSBweCEpIC0+IHNldHMgZm9udC1zaXplIHRvIDE1IGFuZCBsaW5lLWhlaWdodCB0byBhIHJhdGlvIG9mIDE4LzE1ID0gMS4xMzg1XG5cbkBtaXhpbiBmb250LXNpemUoJHNpemU6MTMsICRsaW5lOiAkc2l6ZSAqICgxOC8xMykgKSB7XG4gIGZvbnQtc2l6ZTogcmVtKCRzaXplKTtcbiAgbGluZS1oZWlnaHQ6IHJlbSgkbGluZSk7XG59XG5cbi8vICoqIENsZWFyZml4LlxuLy8gKiBBZGRzIGNsZWFyZml4IGJhc2VkIG9uIGh0dHA6Ly9ib3VyYm9uLmlvL2RvY3MvI2NsZWFyZml4XG4vLyAqIHVzZSBleGFtcGxlID0gICBAaW5jbHVkZSBjbGVhcmZpeFxuXG5AbWl4aW4gY2xlYXJmaXgge1xuICAmOmFmdGVyIHtcbiAgICBjbGVhcjogYm90aDtcbiAgICBjb250ZW50OiAnJztcbiAgICBkaXNwbGF5OiB0YWJsZTtcbiAgfVxufVxuXG4vLyAqKiBsaXN0LXJlc2V0XG4vLyAtLSBSZXNldCBsaXN0IGl0ZW0gZGVmYXVsdHMgd2hlbiBubyBtYXJnaW4sIHBhZGRpbmcsIGxpc3Qgc3R5bGVzIG5lZWRlZFxuQG1peGluIGxpc3QtcmVzZXQge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vLyAqKiBEb24ndCBicmVhayB1cCB0ZXh0XG5AbWl4aW4gdGV4dC1ub2JyZWFrIHtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgLW1zLXdvcmQtYnJlYWs6IGtlZXAtYWxsO1xuICB3b3JkLWJyZWFrOiBrZWVwLWFsbDtcbn1cblxuLy8gKiogdW5kZXJsaW5lZCBsaW5rOiB1c2luZyBwc2V1ZG8gZWxlbWVudCBzbyB3ZSBjYW4gYW5pbWF0ZSBpdFxuLy9cbi8vIC0tIFVzYWdlIG5vcm1hbDogc3RhcnRzIHdpdGggYW4gdW5kZXJsaW5lIGFuZCBkaXNhcHBlYXJzIG9uIGhvdmVyXG4vLyAgICAgIEBpbmNsdWRlIGxpbmstdW5kZXJsaW5lKChjb2xvcjogcmVkLCBjb2xvci1ob3ZlcjogYmx1ZSkpO1xuLy8gLS0gVXNhZ2UgaW52ZXJzZWQ6IGFuIHVuZGVybGluZSBvbmx5IGFwcGVhcnMgd2hlbiBob3ZlcmVkXG4vLyAgICBAaW5jbHVkZSBsaW5rLXVuZGVybGluZShpbnZlcnNlOiB0cnVlKTtcblxuQG1peGluIGxpbmstdW5kZXJsaW5lKCRzZXR0aW5ncykge1xuXG4gICRlbGVtZW50OiBtYXAtZ2V0KCRzZXR0aW5ncywgZWxlbWVudCk7XG4gICRjb2xvcjogbWFwLWdldCgkc2V0dGluZ3MsIGNvbG9yKTtcbiAgJGNvbG9yLWhvdmVyOiBtYXAtZ2V0KCRzZXR0aW5ncywgY29sb3ItaG92ZXIpO1xuICAkY29sb3ItYWN0aXZlOiBtYXAtZ2V0KCRzZXR0aW5ncywgY29sb3ItYWN0aXZlKTtcbiAgJGludmVyc2U6IG1hcC1nZXQoJHNldHRpbmdzLCBpbnZlcnNlKTtcblxuICBAaWYgKCRlbGVtZW50ID09IG51bGwpIHtcbiAgICAkZWxlbWVudDogYWZ0ZXI7XG4gIH1cbiAgQGlmICgkY29sb3IgPT0gbnVsbCkge1xuICAgICRjb2xvcjogJGNvbG9yLWJhc2U7XG4gIH1cbiAgQGlmICgkY29sb3ItaG92ZXIgPT0gbnVsbCkge1xuICAgICRjb2xvci1ob3ZlcjogJGNvbG9yO1xuICB9XG4gIEBpZiAoJGNvbG9yLWFjdGl2ZSA9PSBudWxsKSB7XG4gICAgJGNvbG9yLWFjdGl2ZTogJGNvbG9yLWhvdmVyO1xuICB9XG4gIEBpZiAoJGludmVyc2UgPT0gbnVsbCkge1xuICAgICRpbnZlcnNlOiBmYWxzZTtcbiAgfVxuXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICYsXG4gICY6dmlzaXRlZCB7XG4gICAgY29sb3I6ICRjb2xvcjtcbiAgfVxuXG4gICY6I3skZWxlbWVudH0ge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSk7XG4gICAgYm90dG9tOiAycHg7XG4gICAgaGVpZ2h0OiAxcHg7XG4gICAgdHJhbnNpdGlvbjogYWxsICRkdXJhdGlvbiAkZWFzaW5nO1xuICAgIEBpZiAoJGludmVyc2UgPT0gdHJ1ZSkge1xuICAgICAgb3BhY2l0eTogMDtcbiAgICAgIHdpZHRoOiA5MCU7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItaG92ZXI7XG4gICAgfSBAZWxzZSB7XG4gICAgICBvcGFjaXR5OiAxO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3I7XG4gICAgfVxuXG4gICAgLy8gbm8gc3R5bGluZyBuZWVkZWQgZm9yIGVtcHR5IGxpbmtzIChlZy4gYW5jaG9ycylcbiAgICAmOm5vdChbaHJlZl0pIHtcbiAgICAgICY6YWZ0ZXIge1xuICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gICY6aG92ZXIge1xuICAgIGNvbG9yOiAkY29sb3ItaG92ZXI7XG5cbiAgICAmOmFmdGVyIHtcbiAgICAgIEBpZiAoJGludmVyc2UgPT0gdHJ1ZSkge1xuICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgIH0gQGVsc2Uge1xuICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICB3aWR0aDogOTAlO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItaG92ZXI7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgJjphY3RpdmUge1xuICAgIGNvbG9yOiAkY29sb3ItYWN0aXZlO1xuXG4gICAgJjphZnRlciB7XG4gICAgICBAaWYgKCRpbnZlcnNlID09IHRydWUpIHtcbiAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICB9IEBlbHNlIHtcbiAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgd2lkdGg6IDkwJTtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLWFjdGl2ZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLy8gKiogTW9yZSBMaW5rXG4vLyAtLSBVc2VkIG9uIHRlYXNlcnNcbkBtaXhpbiBsaW5rLW1vcmUge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgQGluY2x1ZGUgZm9udC1hd2Vzb21lKChpY29uOiAkZmEtdmFyLWFuZ2xlLXJpZ2h0LCBzaXplOiAxNCwgdHlwZTogJ2xpZ2h0JywgZWxlbWVudDogJ2FmdGVyJywgbWFyZ2luOiAwIDAgMCByZW0oNSkpKTtcbiAgQGluY2x1ZGUgdGV4dC1ub2JyZWFrO1xuXG4gIC8vIHJlbW92ZSBpbiBjYXNlIHN0eWxlZCBieSBhbm90aGVyIGVsZW1lbnRcbiAgJjpiZWZvcmUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cblxuICAmOmFmdGVyIHtcbiAgICB0cmFuc2l0aW9uOiBub25lOyAvLyBwcmV2ZW50IGxhZ2dpbmcgb24gdHJhbnNpdGlvbiBmcm9tIGxpbmsgdGFnIGl0c2VsZlxuICB9XG59XG5cbi8vICoqIE1vcmUgTGluayBCaWdcbi8vIC0tIFVzZWQgd2l0aCBWaWV3cyBvbiBob21lcGFnZVxuQG1peGluIGxpbmstbW9yZS1iaWcge1xuXG4gIEBpbmNsdWRlIGZvbnQtc2l6ZSgyMiwgNTApO1xuICBmb250LXdlaWdodDogJGZ3LWJvbGQ7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG5cbiAgQGluY2x1ZGUgZm9udC1hd2Vzb21lKChpY29uOiAkZmEtdmFyLWxvbmctYXJyb3ctcmlnaHQsIHNpemU6IDIxLCB0eXBlOiAncmVndWxhcicsIGVsZW1lbnQ6ICdhZnRlcicsIG1hcmdpbjogMCAwIDAgcmVtKDE1KSkpO1xuICBAaW5jbHVkZSB0ZXh0LW5vYnJlYWs7XG5cbiAgLy8gcmVtb3ZlIGluIGNhc2Ugc3R5bGVkIGJ5IGFub3RoZXIgZWxlbWVudFxuICAmOmJlZm9yZSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuXG4gICY6YWZ0ZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0b3A6IHJlbSgtMik7XG4gICAgdHJhbnNpdGlvbjogbm9uZTtcbiAgfVxuXG4gICYsXG4gICY6dmlzaXRlZCB7XG4gICAgY29sb3I6ICRjb2xvci1zcG90LTE7XG4gIH1cblxuICAmOmhvdmVyLFxuICAmOmFjdGl2ZSB7XG4gICAgY29sb3I6ICRjb2xvci1zcG90LTI7XG4gIH1cbn1cblxuLy8gKiogQmFjayBMaW5rXG4vLyAtLVxuQG1peGluIGxpbmstYmFjayB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBAaW5jbHVkZSBmb250LWF3ZXNvbWUoKGljb246ICRmYS12YXItYW5nbGUtbGVmdCwgc2l6ZTogMTQsIHR5cGU6ICdsaWdodCcsIGVsZW1lbnQ6ICdiZWZvcmUnLCBtYXJnaW46IDAgcmVtKDUpIDAgMCkpO1xuICBAaW5jbHVkZSB0ZXh0LW5vYnJlYWs7XG5cbiAgJjpiZWZvcmUge1xuICAgIHRyYW5zaXRpb246IG5vbmU7IC8vIHByZXZlbnQgbGFnZ2luZyBvbiB0cmFuc2l0aW9uIGZyb20gbGluayB0YWcgaXRzZWxmXG4gIH1cblxuICAmOmFmdGVyIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG5cbn1cblxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vICpcbi8vICogQ29uZmlnOiBCcmVha3BvaW50c1xuLy8gKlxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuXG4vLyAqIEJyZWFrcG9pbnRzIG1peGluc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gMiBraW5kcyBvZiBxdWVyaWVzOlxuLy8gLSBwZXIgYnJlYWtwb2ludCwgd2hlcmUgeW91IGNhbiBhbHNvIGNob29zZSBhIG1lZGlhIHR5cGUgKGRlZmF1bHRzIHRvICdhbGwnKVxuLy8gLSBwcmludCAoYSBzaG9ydGN1dCBmb3IgQG1lZGlhIG9ubHkgcHJpbnQpXG4vL1xuLy8gVXNhZ2U6XG4vL1xuLy8gYm9keSB7XG4vLyAgIEBpbmNsdWRlIGJwLW1kKCdvbmx5IHNjcmVlbicpIHtcbi8vICAgICBmb250LXNpemU6IDE2cHg7XG4vLyAgIH1cbi8vIH1cbi8vXG4vLyBib2R5IHtcbi8vICAgQGluY2x1ZGUgcHJpbnQge1xuLy8gICAgIGZvbnQtc2l6ZTogMjRwdDtcbi8vICAgfVxuLy8gfVxuXG4vLyAtLSBwb3J0cmFpdCBwaG9uZSBvbmx5OiBzbWFsbGVyIHRoYW4gNDgwICovXG5cbkBtaXhpbiBicC14cy1zbWFsbC1vbmx5IHtcbiAgQG1lZGlhIChtYXgtd2lkdGg6ICRicC14cy1zbWFsbC1tYXgpIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vLyAtLSBsYW5kc2NhcGUgcGhvbmUgb25seTogNDgwIHVwIHRvIHRhYmxldC0xcHhcblxuQG1peGluIGJwLXhzLXdpZGUtb25seSB7XG4gIEBtZWRpYSAobWluLXdpZHRoOiAkYnAteHMtd2lkZSkgYW5kIChtYXgtd2lkdGg6ICRicC14cy1tYXgpIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vLyAtLSBwaG9uZSBzaXplIG9ubHkgKGZyb20gMCB0byB0YWJsZXQtMXB4IClcblxuQG1peGluIGJwLXhzLW9ubHkge1xuICBAbWVkaWEgKG1heC13aWR0aDogJGJwLXhzLW1heCkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vIC0tIFdpZGUgcGhvbmUgYW5kIGJpZ2dlclxuXG5AbWl4aW4gYnAteHMtd2lkZSB7XG4gIEBtZWRpYSAobWluLXdpZHRoOiAkYnAteHMtd2lkZSkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vIC0tIFRhYmxldCBwb3J0cmFpdCBhbmQgYmlnZ2VyXG5cbkBtaXhpbiBicC1zbSB7XG4gIEBtZWRpYSAobWluLXdpZHRoOiAkYnAtc20pIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vLyAtLSBUYWJsZXQgcG9ydHJhaXQgc2l6ZSBvbmx5XG5cbkBtaXhpbiBicC1zbS1vbmx5IHtcbiAgQG1lZGlhIChtaW4td2lkdGg6ICRicC1zbSkgYW5kIChtYXgtd2lkdGg6ICRicC1zbS1tYXgpIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vLyAtLSBQaG9uZSArIHRhYmxldFxuXG5AbWl4aW4gYnAtc20tbWF4IHtcbiAgQG1lZGlhIChtYXgtd2lkdGg6ICRicC1zbS1tYXgpIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vLyAtLSBEZXNrdG9wIChvciB0YWJsZXQgbGFuZHNjYXBlKSBhbmQgYmlnZ2VyXG5cbkBtaXhpbiBicC1tZCB7XG4gIEBtZWRpYSAobWluLXdpZHRoOiAkYnAtbWQpIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vLyAtLSBEZXNrdG9wIG9ubHlcblxuQG1peGluIGJwLW1kLW9ubHkge1xuICBAbWVkaWEgKG1pbi13aWR0aDogJGJwLW1kKSBhbmQgKG1heC13aWR0aDogJGJwLW1kLW1heCkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vIC0tIEJpZ2dlciB0aGFuIGRlc2t0b3AgYnV0IHNtYWxsZXIgdGhhblxuXG5AbWl4aW4gYnAtbGcge1xuICBAbWVkaWEgKG1pbi13aWR0aDogJGJwLWxnKSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuQG1peGluIGJwLXhsIHtcbiAgQG1lZGlhIChtaW4td2lkdGg6ICRicC14bCkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vIC0tIFByaW50IGNzcyBvbmx5XG5cbkBtaXhpbiBwcmludCB7XG4gIEBtZWRpYSBvbmx5IHByaW50IHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG5cblxuLy8gLS0gY2FsbCB6LWluZGV4IGZyb20gYSBsaXN0IHNvIHlvdSBuZXZlciBsb3NlIG92ZXJ2aWV3XG4vLyAgICBhbmQgc2V0IGl0IHRvIGltcG9ydGFudCBpZiB5b3UgcmVhbGx5IHJlYWxseSByZWFsbHkgbmVlZCBpdFxuLy8gdXNhZ2U6IEBpbmNsdWRlKG1vZGFsLCBpbXBvcnRhbnQpOyA9PiB6LWluZGV4OiAxMDAwICFpbXBvcnRhbnQ7XG5AbWl4aW4gei1pbmRleCgka2V5LCAkaW1wb3J0YW50OiBudWxsKSB7XG4gIEBpZiAoJGltcG9ydGFudCA9PSBudWxsKSB7XG4gICAgei1pbmRleDogbWFwLWdldCgkei1pbmRleCwgJGtleSk7XG4gIH0gQGVsc2Uge1xuICAgIHotaW5kZXg6IG1hcC1nZXQoJHotaW5kZXgsICRrZXkpICFpbXBvcnRhbnQ7XG4gIH1cbn1cbiIsIiRiYXNlLXNwYWNlOiAwLjRyZW07XG5cbiRzcGFjZS0xOiAkYmFzZS1zcGFjZTtcbiRzcGFjZS0yOiAkYmFzZS1zcGFjZSAqIDI7XG4kc3BhY2UtMzogJGJhc2Utc3BhY2UgKiAzO1xuJHNwYWNlLTQ6ICRiYXNlLXNwYWNlICogNDtcbiRzcGFjZS01OiAkYmFzZS1zcGFjZSAqIDU7XG4kc3BhY2UtNjogJGJhc2Utc3BhY2UgKiA2O1xuJHNwYWNlLTc6ICRiYXNlLXNwYWNlICogNztcbiRzcGFjZS04OiAkYmFzZS1zcGFjZSAqIDg7XG4kc3BhY2UtOTogJGJhc2Utc3BhY2UgKiA5O1xuJHNwYWNlLTEwOiAkYmFzZS1zcGFjZSAqIDEwO1xuJHNwYWNlLTIwOiAkYmFzZS1zcGFjZSAqIDIwO1xuJHNwYWNlLTQwOiAkYmFzZS1zcGFjZSAqIDQwO1xuXG4kZGVmYXVsdC1tYXJnaW46IDFlbTtcbiRkZWZhdWx0LXBhZGRpbmc6IDJlbTtcbiRndXR0ZXI6IDJyZW07XG5cbiRib3JkZXItcmFkaXVzOiA1cHg7XG5cbiRzaXRlLXdpZHRoOiAxMThyZW07XG4kc2l0ZS13aWR0aC1tYXg6IDExOHJlbTtcblxuLy8gc21hbGxlciBnYXBcbiRnYXAtdmVydC14czogNSAhZGVmYXVsdDtcbiRnYXAtdmVydC1zbTogMTU7XG5cbi8vIC0tIHVzZWQgd2l0aCBtaXhpbjogZWcuIEBpbmNsdWRlIHotaW5kZXgoaGVhZGVyKVxuJHotaW5kZXg6IChcbiAgcGIgICAgICAgICAgICAgICAgIDogMTAwMDAsIC8vIGRldmVsb3BcbiAgZ3JpZC1vdmVybGF5ICAgICAgIDogOTk5OSwgIC8vIGRldmVsb3BcbiAgY29va2llICAgICAgICAgICAgIDogMTAxMCwgIC8vIG92ZXIgZXZlcnl0aGluZ1xuICBtb2RhbCAgICAgICAgICAgICAgOiAxMDAwLCAgLy8gb3ZlciBhbGwgY29udGVudCBhbmQgbmF2XG4gIGFkbWluLXRvb2xiYXIgICAgICA6IDk5MCwgICAvLyB1bmRlciBtb2RhbCBidXQgb3ZlciByZXN0XG4gIGhlYWRlci10b3AgICAgICAgICA6IDkyMCwgICAvLyBzb21lIGVsZW1lbnRzIGdvIG9uIHRoZSBtb2JpbGUgbmF2XG4gIG1vYmlsZS1uYXYgICAgICAgICA6IDkxMCxcbiAgaGVhZGVyLWZpeGVkICAgICAgIDogOTEwLFxuICBoZWFkZXIgICAgICAgICAgICAgOiA5MTAsXG4gIHN0YXR1cyAgICAgICAgICAgICA6IDkwMCwgICAvLyB1bmRlciBhbGwgZml4ZWQgdGhpbmdzIGJ1dCBhYm92ZSBjb250ZW50XG4pO1xuXG4iLCIkcmVtLWJhc2U6IDE2O1xuXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gRm9udCB3ZWlnaHRzLlxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiRmdy1leHRyYWJvbGQ6ICAgICAgICAgICAgICAgICAgOTAwO1xuJGZ3LWJvbGQ6ICAgICAgICAgICAgICAgICAgICAgICA3MDA7XG4kZnctc2VtaWJvbGQ6ICAgICAgICAgICAgICAgICAgIDUwMDtcbiRmdy1ub3JtYWw6ICAgICAgICAgICAgICAgICAgICAgMzAwO1xuJGZ3LWxpZ2h0OiAgICAgICAgICAgICAgICAgICAgICAxMDA7XG5cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBGb250IHNpemVzLlxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiRmcy1iYXNlOiAxOCAhZGVmYXVsdDtcbiRmb250LXNpemUtYmFzZTogJGZzLWJhc2UgIWRlZmF1bHQ7XG4kZnMtc206IDE0ICFkZWZhdWx0O1xuJGZzLXhzOiAxMSAhZGVmYXVsdDtcblxuJGZzLWgxOiA4MDtcbiRmcy1oMjogNDg7XG4kZnMtaDM6IDMyO1xuJGZzLWg0OiAyNDtcblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIEZvbnRzLlxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiRmb250LWJhc2U6ICdCYXJsb3cnLCAnQXJpYWwnLCBzYW5zLXNlcmlmICFkZWZhdWx0O1xuJGZvbnQtaGVhZGluZzogJ0JhcmxvdyBTZW1pIENvbmRlbnNlZCcsICdBcmlhbCcgIWRlZmF1bHQ7XG5cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBMaW5lIGhlaWdodHMuXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuJGxpbmUtaGVpZ2h0LWJhc2U6IDMyICFkZWZhdWx0O1xuJGxoLWgxOiA5NjtcbiRsaC1oMjogNjQ7XG4kbGgtaDM6IDQwO1xuJGxoLWg0OiAzMjtcblxuJGdhcC12ZXJ0OiAkbGluZS1oZWlnaHQtYmFzZSAhZGVmYXVsdDtcblxuJGNvbG9yLWgxOiAkY29sb3ItaGVhZGluZyAhZGVmYXVsdDtcbiRjb2xvci1oMjogJGNvbG9yLWhlYWRpbmcgIWRlZmF1bHQ7XG4kY29sb3ItaDM6ICRjb2xvci1oZWFkaW5nICFkZWZhdWx0O1xuJGNvbG9yLWg0OiAkY29sb3ItaGVhZGluZyAhZGVmYXVsdDtcblxuLmgxLFxuLmgyLFxuLmgzLFxuLmg0LFxuLmg1LFxuLmg2IHtcbiAgZm9udC1mYW1pbHk6ICRmb250LWhlYWRpbmc7XG4gIGZvbnQtd2VpZ2h0OiAkZnctYm9sZDtcblxuICBhLFxuICBhOnZpc2l0ZWQge1xuICAgIGNvbG9yOiAkY29sb3ItbGluaztcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIH1cblxuICBhOmhvdmVyIHtcbiAgICBjb2xvcjogJGNvbG9yLWxpbms7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIH1cbn1cblxuaDEsXG4uaDEge1xuICBtYXJnaW46IDAgMCByZW0oJGdhcC12ZXJ0KSAwO1xuICBAaW5jbHVkZSBmb250LXNpemUoJGZzLWgxLCAkbGgtaDEpO1xuICBjb2xvcjogJGNvbG9yLWgxO1xufVxuXG5oMixcbi5oMiB7XG4gIG1hcmdpbjogMCAwIHJlbSgkZ2FwLXZlcnQtc20pIDA7XG4gIEBpbmNsdWRlIGZvbnQtc2l6ZSgkZnMtaDIsICRsaC1oMik7XG4gIGNvbG9yOiAkY29sb3ItaDI7XG59XG5cbmgzLFxuLmgzIHtcbiAgbWFyZ2luOiAwIDAgcmVtKCRnYXAtdmVydC1zbSkgMDtcbiAgQGluY2x1ZGUgZm9udC1zaXplKCRmcy1oMywgJGxoLWgzKTtcbiAgY29sb3I6ICRjb2xvci1oMztcbn1cblxuaDQsXG4uaDQge1xuICBtYXJnaW46IDAgMCByZW0oJGdhcC12ZXJ0LXNtKSAwO1xuICBAaW5jbHVkZSBmb250LXNpemUoJGZzLWg0LCAkbGgtaDQpO1xuICBjb2xvcjogJGNvbG9yLWg0O1xufVxuXG5oNSwgaDYsXG4uaDUsXG4uaDYge1xuICBtYXJnaW46IDAgMCByZW0oJGdhcC12ZXJ0LXhzKSAwO1xuICBAaW5jbHVkZSBmb250LXNpemUoJGZvbnQtc2l6ZS1iYXNlLCAkbGluZS1oZWlnaHQtYmFzZSk7XG4gIGNvbG9yOiAkY29sb3ItYmFzZTtcbn1cblxuXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gRm9udEF3ZXNvbWVcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4kZmEtZm9udC1zaXplLWJhc2U6ICAgICAgICAgICAxNnB4ICFkZWZhdWx0O1xuJGZhLWNzcy1wcmVmaXg6ICAgICAgICAgICAgICAgZmEgIWRlZmF1bHQ7XG4kZmEtdmVyc2lvbjogICAgICAgICAgICAgICAgICBcIjUuMC42XCIgIWRlZmF1bHQ7XG4kZmEtYm9yZGVyLWNvbG9yOiAgICAgICAgICAgICAjZWVlICFkZWZhdWx0O1xuJGZhLWludmVyc2U6ICAgICAgICAgICAgICAgICAgI2ZmZiAhZGVmYXVsdDtcbiRmYS1saS13aWR0aDogICAgICAgICAgICAgICAgIDJlbSAhZGVmYXVsdDtcblxuLy8gQ29udmVuaWVuY2UgZnVuY3Rpb24gdXNlZCB0byBzZXQgY29udGVudCBwcm9wZXJ0eVxuQGZ1bmN0aW9uIGZhLWNvbnRlbnQoJGZhLXZhcikge1xuICBAcmV0dXJuIHVucXVvdGUoXCJcXFwiI3sgJGZhLXZhciB9XFxcIlwiKTtcbn1cblxuJGZhLXZhci01MDBweDogXFxmMjZlO1xuJGZhLXZhci1hY2Nlc3NpYmxlLWljb246IFxcZjM2ODtcbiRmYS12YXItYWNjdXNvZnQ6IFxcZjM2OTtcbiRmYS12YXItYWRkcmVzcy1ib29rOiBcXGYyYjk7XG4kZmEtdmFyLWFkZHJlc3MtY2FyZDogXFxmMmJiO1xuJGZhLXZhci1hZGp1c3Q6IFxcZjA0MjtcbiRmYS12YXItYWRuOiBcXGYxNzA7XG4kZmEtdmFyLWFkdmVyc2FsOiBcXGYzNmE7XG4kZmEtdmFyLWFmZmlsaWF0ZXRoZW1lOiBcXGYzNmI7XG4kZmEtdmFyLWFsYXJtLWNsb2NrOiBcXGYzNGU7XG4kZmEtdmFyLWFsZ29saWE6IFxcZjM2YztcbiRmYS12YXItYWxpZ24tY2VudGVyOiBcXGYwMzc7XG4kZmEtdmFyLWFsaWduLWp1c3RpZnk6IFxcZjAzOTtcbiRmYS12YXItYWxpZ24tbGVmdDogXFxmMDM2O1xuJGZhLXZhci1hbGlnbi1yaWdodDogXFxmMDM4O1xuJGZhLXZhci1hbWF6b246IFxcZjI3MDtcbiRmYS12YXItYW1hem9uLXBheTogXFxmNDJjO1xuJGZhLXZhci1hbWJ1bGFuY2U6IFxcZjBmOTtcbiRmYS12YXItYW1lcmljYW4tc2lnbi1sYW5ndWFnZS1pbnRlcnByZXRpbmc6IFxcZjJhMztcbiRmYS12YXItYW1pbGlhOiBcXGYzNmQ7XG4kZmEtdmFyLWFuY2hvcjogXFxmMTNkO1xuJGZhLXZhci1hbmRyb2lkOiBcXGYxN2I7XG4kZmEtdmFyLWFuZ2VsbGlzdDogXFxmMjA5O1xuJGZhLXZhci1hbmdsZS1kb3VibGUtZG93bjogXFxmMTAzO1xuJGZhLXZhci1hbmdsZS1kb3VibGUtbGVmdDogXFxmMTAwO1xuJGZhLXZhci1hbmdsZS1kb3VibGUtcmlnaHQ6IFxcZjEwMTtcbiRmYS12YXItYW5nbGUtZG91YmxlLXVwOiBcXGYxMDI7XG4kZmEtdmFyLWFuZ2xlLWRvd246IFxcZjEwNztcbiRmYS12YXItYW5nbGUtbGVmdDogXFxmMTA0O1xuJGZhLXZhci1hbmdsZS1yaWdodDogXFxmMTA1O1xuJGZhLXZhci1hbmdsZS11cDogXFxmMTA2O1xuJGZhLXZhci1hbmdyeWNyZWF0aXZlOiBcXGYzNmU7XG4kZmEtdmFyLWFuZ3VsYXI6IFxcZjQyMDtcbiRmYS12YXItYXBwLXN0b3JlOiBcXGYzNmY7XG4kZmEtdmFyLWFwcC1zdG9yZS1pb3M6IFxcZjM3MDtcbiRmYS12YXItYXBwZXI6IFxcZjM3MTtcbiRmYS12YXItYXBwbGU6IFxcZjE3OTtcbiRmYS12YXItYXBwbGUtcGF5OiBcXGY0MTU7XG4kZmEtdmFyLWFyY2hpdmU6IFxcZjE4NztcbiRmYS12YXItYXJyb3ctYWx0LWNpcmNsZS1kb3duOiBcXGYzNTg7XG4kZmEtdmFyLWFycm93LWFsdC1jaXJjbGUtbGVmdDogXFxmMzU5O1xuJGZhLXZhci1hcnJvdy1hbHQtY2lyY2xlLXJpZ2h0OiBcXGYzNWE7XG4kZmEtdmFyLWFycm93LWFsdC1jaXJjbGUtdXA6IFxcZjM1YjtcbiRmYS12YXItYXJyb3ctYWx0LWRvd246IFxcZjM1NDtcbiRmYS12YXItYXJyb3ctYWx0LWZyb20tYm90dG9tOiBcXGYzNDY7XG4kZmEtdmFyLWFycm93LWFsdC1mcm9tLWxlZnQ6IFxcZjM0NztcbiRmYS12YXItYXJyb3ctYWx0LWZyb20tcmlnaHQ6IFxcZjM0ODtcbiRmYS12YXItYXJyb3ctYWx0LWZyb20tdG9wOiBcXGYzNDk7XG4kZmEtdmFyLWFycm93LWFsdC1sZWZ0OiBcXGYzNTU7XG4kZmEtdmFyLWFycm93LWFsdC1yaWdodDogXFxmMzU2O1xuJGZhLXZhci1hcnJvdy1hbHQtc3F1YXJlLWRvd246IFxcZjM1MDtcbiRmYS12YXItYXJyb3ctYWx0LXNxdWFyZS1sZWZ0OiBcXGYzNTE7XG4kZmEtdmFyLWFycm93LWFsdC1zcXVhcmUtcmlnaHQ6IFxcZjM1MjtcbiRmYS12YXItYXJyb3ctYWx0LXNxdWFyZS11cDogXFxmMzUzO1xuJGZhLXZhci1hcnJvdy1hbHQtdG8tYm90dG9tOiBcXGYzNGE7XG4kZmEtdmFyLWFycm93LWFsdC10by1sZWZ0OiBcXGYzNGI7XG4kZmEtdmFyLWFycm93LWFsdC10by1yaWdodDogXFxmMzRjO1xuJGZhLXZhci1hcnJvdy1hbHQtdG8tdG9wOiBcXGYzNGQ7XG4kZmEtdmFyLWFycm93LWFsdC11cDogXFxmMzU3O1xuJGZhLXZhci1hcnJvdy1jaXJjbGUtZG93bjogXFxmMGFiO1xuJGZhLXZhci1hcnJvdy1jaXJjbGUtbGVmdDogXFxmMGE4O1xuJGZhLXZhci1hcnJvdy1jaXJjbGUtcmlnaHQ6IFxcZjBhOTtcbiRmYS12YXItYXJyb3ctY2lyY2xlLXVwOiBcXGYwYWE7XG4kZmEtdmFyLWFycm93LWRvd246IFxcZjA2MztcbiRmYS12YXItYXJyb3ctZnJvbS1ib3R0b206IFxcZjM0MjtcbiRmYS12YXItYXJyb3ctZnJvbS1sZWZ0OiBcXGYzNDM7XG4kZmEtdmFyLWFycm93LWZyb20tcmlnaHQ6IFxcZjM0NDtcbiRmYS12YXItYXJyb3ctZnJvbS10b3A6IFxcZjM0NTtcbiRmYS12YXItYXJyb3ctbGVmdDogXFxmMDYwO1xuJGZhLXZhci1hcnJvdy1yaWdodDogXFxmMDYxO1xuJGZhLXZhci1hcnJvdy1zcXVhcmUtZG93bjogXFxmMzM5O1xuJGZhLXZhci1hcnJvdy1zcXVhcmUtbGVmdDogXFxmMzNhO1xuJGZhLXZhci1hcnJvdy1zcXVhcmUtcmlnaHQ6IFxcZjMzYjtcbiRmYS12YXItYXJyb3ctc3F1YXJlLXVwOiBcXGYzM2M7XG4kZmEtdmFyLWFycm93LXRvLWJvdHRvbTogXFxmMzNkO1xuJGZhLXZhci1hcnJvdy10by1sZWZ0OiBcXGYzM2U7XG4kZmEtdmFyLWFycm93LXRvLXJpZ2h0OiBcXGYzNDA7XG4kZmEtdmFyLWFycm93LXRvLXRvcDogXFxmMzQxO1xuJGZhLXZhci1hcnJvdy11cDogXFxmMDYyO1xuJGZhLXZhci1hcnJvd3M6IFxcZjA0NztcbiRmYS12YXItYXJyb3dzLWFsdDogXFxmMGIyO1xuJGZhLXZhci1hcnJvd3MtYWx0LWg6IFxcZjMzNztcbiRmYS12YXItYXJyb3dzLWFsdC12OiBcXGYzMzg7XG4kZmEtdmFyLWFycm93cy1oOiBcXGYwN2U7XG4kZmEtdmFyLWFycm93cy12OiBcXGYwN2Q7XG4kZmEtdmFyLWFzc2lzdGl2ZS1saXN0ZW5pbmctc3lzdGVtczogXFxmMmEyO1xuJGZhLXZhci1hc3RlcmlzazogXFxmMDY5O1xuJGZhLXZhci1hc3ltbWV0cmlrOiBcXGYzNzI7XG4kZmEtdmFyLWF0OiBcXGYxZmE7XG4kZmEtdmFyLWF1ZGlibGU6IFxcZjM3MztcbiRmYS12YXItYXVkaW8tZGVzY3JpcHRpb246IFxcZjI5ZTtcbiRmYS12YXItYXV0b3ByZWZpeGVyOiBcXGY0MWM7XG4kZmEtdmFyLWF2aWFuZXg6IFxcZjM3NDtcbiRmYS12YXItYXZpYXRvOiBcXGY0MjE7XG4kZmEtdmFyLWF3czogXFxmMzc1O1xuJGZhLXZhci1iYWNrd2FyZDogXFxmMDRhO1xuJGZhLXZhci1iYWRnZTogXFxmMzM1O1xuJGZhLXZhci1iYWRnZS1jaGVjazogXFxmMzM2O1xuJGZhLXZhci1iYWxhbmNlLXNjYWxlOiBcXGYyNGU7XG4kZmEtdmFyLWJhbjogXFxmMDVlO1xuJGZhLXZhci1iYW5kY2FtcDogXFxmMmQ1O1xuJGZhLXZhci1iYXJjb2RlOiBcXGYwMmE7XG4kZmEtdmFyLWJhcnM6IFxcZjBjOTtcbiRmYS12YXItYmFzZWJhbGw6IFxcZjQzMjtcbiRmYS12YXItYmFzZWJhbGwtYmFsbDogXFxmNDMzO1xuJGZhLXZhci1iYXNrZXRiYWxsLWJhbGw6IFxcZjQzNDtcbiRmYS12YXItYmFza2V0YmFsbC1ob29wOiBcXGY0MzU7XG4kZmEtdmFyLWJhdGg6IFxcZjJjZDtcbiRmYS12YXItYmF0dGVyeS1ib2x0OiBcXGYzNzY7XG4kZmEtdmFyLWJhdHRlcnktZW1wdHk6IFxcZjI0NDtcbiRmYS12YXItYmF0dGVyeS1mdWxsOiBcXGYyNDA7XG4kZmEtdmFyLWJhdHRlcnktaGFsZjogXFxmMjQyO1xuJGZhLXZhci1iYXR0ZXJ5LXF1YXJ0ZXI6IFxcZjI0MztcbiRmYS12YXItYmF0dGVyeS1zbGFzaDogXFxmMzc3O1xuJGZhLXZhci1iYXR0ZXJ5LXRocmVlLXF1YXJ0ZXJzOiBcXGYyNDE7XG4kZmEtdmFyLWJlZDogXFxmMjM2O1xuJGZhLXZhci1iZWVyOiBcXGYwZmM7XG4kZmEtdmFyLWJlaGFuY2U6IFxcZjFiNDtcbiRmYS12YXItYmVoYW5jZS1zcXVhcmU6IFxcZjFiNTtcbiRmYS12YXItYmVsbDogXFxmMGYzO1xuJGZhLXZhci1iZWxsLXNsYXNoOiBcXGYxZjY7XG4kZmEtdmFyLWJpY3ljbGU6IFxcZjIwNjtcbiRmYS12YXItYmltb2JqZWN0OiBcXGYzNzg7XG4kZmEtdmFyLWJpbm9jdWxhcnM6IFxcZjFlNTtcbiRmYS12YXItYmlydGhkYXktY2FrZTogXFxmMWZkO1xuJGZhLXZhci1iaXRidWNrZXQ6IFxcZjE3MTtcbiRmYS12YXItYml0Y29pbjogXFxmMzc5O1xuJGZhLXZhci1iaXR5OiBcXGYzN2E7XG4kZmEtdmFyLWJsYWNrLXRpZTogXFxmMjdlO1xuJGZhLXZhci1ibGFja2JlcnJ5OiBcXGYzN2I7XG4kZmEtdmFyLWJsaW5kOiBcXGYyOWQ7XG4kZmEtdmFyLWJsb2dnZXI6IFxcZjM3YztcbiRmYS12YXItYmxvZ2dlci1iOiBcXGYzN2Q7XG4kZmEtdmFyLWJsdWV0b290aDogXFxmMjkzO1xuJGZhLXZhci1ibHVldG9vdGgtYjogXFxmMjk0O1xuJGZhLXZhci1ib2xkOiBcXGYwMzI7XG4kZmEtdmFyLWJvbHQ6IFxcZjBlNztcbiRmYS12YXItYm9tYjogXFxmMWUyO1xuJGZhLXZhci1ib29rOiBcXGYwMmQ7XG4kZmEtdmFyLWJvb2ttYXJrOiBcXGYwMmU7XG4kZmEtdmFyLWJvd2xpbmctYmFsbDogXFxmNDM2O1xuJGZhLXZhci1ib3dsaW5nLXBpbnM6IFxcZjQzNztcbiRmYS12YXItYm94aW5nLWdsb3ZlOiBcXGY0Mzg7XG4kZmEtdmFyLWJyYWlsbGU6IFxcZjJhMTtcbiRmYS12YXItYnJpZWZjYXNlOiBcXGYwYjE7XG4kZmEtdmFyLWJyb3dzZXI6IFxcZjM3ZTtcbiRmYS12YXItYnRjOiBcXGYxNWE7XG4kZmEtdmFyLWJ1ZzogXFxmMTg4O1xuJGZhLXZhci1idWlsZGluZzogXFxmMWFkO1xuJGZhLXZhci1idWxsaG9ybjogXFxmMGExO1xuJGZhLXZhci1idWxsc2V5ZTogXFxmMTQwO1xuJGZhLXZhci1idXJvbW9iZWxleHBlcnRlOiBcXGYzN2Y7XG4kZmEtdmFyLWJ1czogXFxmMjA3O1xuJGZhLXZhci1idXlzZWxsYWRzOiBcXGYyMGQ7XG4kZmEtdmFyLWNhbGN1bGF0b3I6IFxcZjFlYztcbiRmYS12YXItY2FsZW5kYXI6IFxcZjEzMztcbiRmYS12YXItY2FsZW5kYXItYWx0OiBcXGYwNzM7XG4kZmEtdmFyLWNhbGVuZGFyLWNoZWNrOiBcXGYyNzQ7XG4kZmEtdmFyLWNhbGVuZGFyLWVkaXQ6IFxcZjMzMztcbiRmYS12YXItY2FsZW5kYXItZXhjbGFtYXRpb246IFxcZjMzNDtcbiRmYS12YXItY2FsZW5kYXItbWludXM6IFxcZjI3MjtcbiRmYS12YXItY2FsZW5kYXItcGx1czogXFxmMjcxO1xuJGZhLXZhci1jYWxlbmRhci10aW1lczogXFxmMjczO1xuJGZhLXZhci1jYW1lcmE6IFxcZjAzMDtcbiRmYS12YXItY2FtZXJhLWFsdDogXFxmMzMyO1xuJGZhLXZhci1jYW1lcmEtcmV0cm86IFxcZjA4MztcbiRmYS12YXItY2FyOiBcXGYxYjk7XG4kZmEtdmFyLWNhcmV0LWNpcmNsZS1kb3duOiBcXGYzMmQ7XG4kZmEtdmFyLWNhcmV0LWNpcmNsZS1sZWZ0OiBcXGYzMmU7XG4kZmEtdmFyLWNhcmV0LWNpcmNsZS1yaWdodDogXFxmMzMwO1xuJGZhLXZhci1jYXJldC1jaXJjbGUtdXA6IFxcZjMzMTtcbiRmYS12YXItY2FyZXQtZG93bjogXFxmMGQ3O1xuJGZhLXZhci1jYXJldC1sZWZ0OiBcXGYwZDk7XG4kZmEtdmFyLWNhcmV0LXJpZ2h0OiBcXGYwZGE7XG4kZmEtdmFyLWNhcmV0LXNxdWFyZS1kb3duOiBcXGYxNTA7XG4kZmEtdmFyLWNhcmV0LXNxdWFyZS1sZWZ0OiBcXGYxOTE7XG4kZmEtdmFyLWNhcmV0LXNxdWFyZS1yaWdodDogXFxmMTUyO1xuJGZhLXZhci1jYXJldC1zcXVhcmUtdXA6IFxcZjE1MTtcbiRmYS12YXItY2FyZXQtdXA6IFxcZjBkODtcbiRmYS12YXItY2FydC1hcnJvdy1kb3duOiBcXGYyMTg7XG4kZmEtdmFyLWNhcnQtcGx1czogXFxmMjE3O1xuJGZhLXZhci1jYy1hbWF6b24tcGF5OiBcXGY0MmQ7XG4kZmEtdmFyLWNjLWFtZXg6IFxcZjFmMztcbiRmYS12YXItY2MtYXBwbGUtcGF5OiBcXGY0MTY7XG4kZmEtdmFyLWNjLWRpbmVycy1jbHViOiBcXGYyNGM7XG4kZmEtdmFyLWNjLWRpc2NvdmVyOiBcXGYxZjI7XG4kZmEtdmFyLWNjLWpjYjogXFxmMjRiO1xuJGZhLXZhci1jYy1tYXN0ZXJjYXJkOiBcXGYxZjE7XG4kZmEtdmFyLWNjLXBheXBhbDogXFxmMWY0O1xuJGZhLXZhci1jYy1zdHJpcGU6IFxcZjFmNTtcbiRmYS12YXItY2MtdmlzYTogXFxmMWYwO1xuJGZhLXZhci1jZW50ZXJjb2RlOiBcXGYzODA7XG4kZmEtdmFyLWNlcnRpZmljYXRlOiBcXGYwYTM7XG4kZmEtdmFyLWNoYXJ0LWFyZWE6IFxcZjFmZTtcbiRmYS12YXItY2hhcnQtYmFyOiBcXGYwODA7XG4kZmEtdmFyLWNoYXJ0LWxpbmU6IFxcZjIwMTtcbiRmYS12YXItY2hhcnQtcGllOiBcXGYyMDA7XG4kZmEtdmFyLWNoZWNrOiBcXGYwMGM7XG4kZmEtdmFyLWNoZWNrLWNpcmNsZTogXFxmMDU4O1xuJGZhLXZhci1jaGVjay1zcXVhcmU6IFxcZjE0YTtcbiRmYS12YXItY2hlc3M6IFxcZjQzOTtcbiRmYS12YXItY2hlc3MtYmlzaG9wOiBcXGY0M2E7XG4kZmEtdmFyLWNoZXNzLWJpc2hvcC1hbHQ6IFxcZjQzYjtcbiRmYS12YXItY2hlc3MtYm9hcmQ6IFxcZjQzYztcbiRmYS12YXItY2hlc3MtY2xvY2s6IFxcZjQzZDtcbiRmYS12YXItY2hlc3MtY2xvY2stYWx0OiBcXGY0M2U7XG4kZmEtdmFyLWNoZXNzLWtpbmc6IFxcZjQzZjtcbiRmYS12YXItY2hlc3Mta2luZy1hbHQ6IFxcZjQ0MDtcbiRmYS12YXItY2hlc3Mta25pZ2h0OiBcXGY0NDE7XG4kZmEtdmFyLWNoZXNzLWtuaWdodC1hbHQ6IFxcZjQ0MjtcbiRmYS12YXItY2hlc3MtcGF3bjogXFxmNDQzO1xuJGZhLXZhci1jaGVzcy1wYXduLWFsdDogXFxmNDQ0O1xuJGZhLXZhci1jaGVzcy1xdWVlbjogXFxmNDQ1O1xuJGZhLXZhci1jaGVzcy1xdWVlbi1hbHQ6IFxcZjQ0NjtcbiRmYS12YXItY2hlc3Mtcm9vazogXFxmNDQ3O1xuJGZhLXZhci1jaGVzcy1yb29rLWFsdDogXFxmNDQ4O1xuJGZhLXZhci1jaGV2cm9uLWNpcmNsZS1kb3duOiBcXGYxM2E7XG4kZmEtdmFyLWNoZXZyb24tY2lyY2xlLWxlZnQ6IFxcZjEzNztcbiRmYS12YXItY2hldnJvbi1jaXJjbGUtcmlnaHQ6IFxcZjEzODtcbiRmYS12YXItY2hldnJvbi1jaXJjbGUtdXA6IFxcZjEzOTtcbiRmYS12YXItY2hldnJvbi1kb3VibGUtZG93bjogXFxmMzIyO1xuJGZhLXZhci1jaGV2cm9uLWRvdWJsZS1sZWZ0OiBcXGYzMjM7XG4kZmEtdmFyLWNoZXZyb24tZG91YmxlLXJpZ2h0OiBcXGYzMjQ7XG4kZmEtdmFyLWNoZXZyb24tZG91YmxlLXVwOiBcXGYzMjU7XG4kZmEtdmFyLWNoZXZyb24tZG93bjogXFxmMDc4O1xuJGZhLXZhci1jaGV2cm9uLWxlZnQ6IFxcZjA1MztcbiRmYS12YXItY2hldnJvbi1yaWdodDogXFxmMDU0O1xuJGZhLXZhci1jaGV2cm9uLXNxdWFyZS1kb3duOiBcXGYzMjk7XG4kZmEtdmFyLWNoZXZyb24tc3F1YXJlLWxlZnQ6IFxcZjMyYTtcbiRmYS12YXItY2hldnJvbi1zcXVhcmUtcmlnaHQ6IFxcZjMyYjtcbiRmYS12YXItY2hldnJvbi1zcXVhcmUtdXA6IFxcZjMyYztcbiRmYS12YXItY2hldnJvbi11cDogXFxmMDc3O1xuJGZhLXZhci1jaGlsZDogXFxmMWFlO1xuJGZhLXZhci1jaHJvbWU6IFxcZjI2ODtcbiRmYS12YXItY2lyY2xlOiBcXGYxMTE7XG4kZmEtdmFyLWNpcmNsZS1ub3RjaDogXFxmMWNlO1xuJGZhLXZhci1jbGlwYm9hcmQ6IFxcZjMyODtcbiRmYS12YXItY2xvY2s6IFxcZjAxNztcbiRmYS12YXItY2xvbmU6IFxcZjI0ZDtcbiRmYS12YXItY2xvc2VkLWNhcHRpb25pbmc6IFxcZjIwYTtcbiRmYS12YXItY2xvdWQ6IFxcZjBjMjtcbiRmYS12YXItY2xvdWQtZG93bmxvYWQ6IFxcZjBlZDtcbiRmYS12YXItY2xvdWQtZG93bmxvYWQtYWx0OiBcXGYzODE7XG4kZmEtdmFyLWNsb3VkLXVwbG9hZDogXFxmMGVlO1xuJGZhLXZhci1jbG91ZC11cGxvYWQtYWx0OiBcXGYzODI7XG4kZmEtdmFyLWNsb3Vkc2NhbGU6IFxcZjM4MztcbiRmYS12YXItY2xvdWRzbWl0aDogXFxmMzg0O1xuJGZhLXZhci1jbG91ZHZlcnNpZnk6IFxcZjM4NTtcbiRmYS12YXItY2x1YjogXFxmMzI3O1xuJGZhLXZhci1jb2RlOiBcXGYxMjE7XG4kZmEtdmFyLWNvZGUtYnJhbmNoOiBcXGYxMjY7XG4kZmEtdmFyLWNvZGUtY29tbWl0OiBcXGYzODY7XG4kZmEtdmFyLWNvZGUtbWVyZ2U6IFxcZjM4NztcbiRmYS12YXItY29kZXBlbjogXFxmMWNiO1xuJGZhLXZhci1jb2RpZXBpZTogXFxmMjg0O1xuJGZhLXZhci1jb2ZmZWU6IFxcZjBmNDtcbiRmYS12YXItY29nOiBcXGYwMTM7XG4kZmEtdmFyLWNvZ3M6IFxcZjA4NTtcbiRmYS12YXItY29sdW1uczogXFxmMGRiO1xuJGZhLXZhci1jb21tZW50OiBcXGYwNzU7XG4kZmEtdmFyLWNvbW1lbnQtYWx0OiBcXGYyN2E7XG4kZmEtdmFyLWNvbW1lbnRzOiBcXGYwODY7XG4kZmEtdmFyLWNvbXBhc3M6IFxcZjE0ZTtcbiRmYS12YXItY29tcHJlc3M6IFxcZjA2NjtcbiRmYS12YXItY29tcHJlc3MtYWx0OiBcXGY0MjI7XG4kZmEtdmFyLWNvbXByZXNzLXdpZGU6IFxcZjMyNjtcbiRmYS12YXItY29ubmVjdGRldmVsb3A6IFxcZjIwZTtcbiRmYS12YXItY29udGFvOiBcXGYyNmQ7XG4kZmEtdmFyLWNvcHk6IFxcZjBjNTtcbiRmYS12YXItY29weXJpZ2h0OiBcXGYxZjk7XG4kZmEtdmFyLWNwYW5lbDogXFxmMzg4O1xuJGZhLXZhci1jcmVhdGl2ZS1jb21tb25zOiBcXGYyNWU7XG4kZmEtdmFyLWNyZWRpdC1jYXJkOiBcXGYwOWQ7XG4kZmEtdmFyLWNyZWRpdC1jYXJkLWJsYW5rOiBcXGYzODk7XG4kZmEtdmFyLWNyZWRpdC1jYXJkLWZyb250OiBcXGYzOGE7XG4kZmEtdmFyLWNyaWNrZXQ6IFxcZjQ0OTtcbiRmYS12YXItY3JvcDogXFxmMTI1O1xuJGZhLXZhci1jcm9zc2hhaXJzOiBcXGYwNWI7XG4kZmEtdmFyLWNzczM6IFxcZjEzYztcbiRmYS12YXItY3NzMy1hbHQ6IFxcZjM4YjtcbiRmYS12YXItY3ViZTogXFxmMWIyO1xuJGZhLXZhci1jdWJlczogXFxmMWIzO1xuJGZhLXZhci1jdXJsaW5nOiBcXGY0NGE7XG4kZmEtdmFyLWN1dDogXFxmMGM0O1xuJGZhLXZhci1jdXR0bGVmaXNoOiBcXGYzOGM7XG4kZmEtdmFyLWQtYW5kLWQ6IFxcZjM4ZDtcbiRmYS12YXItZGFzaGN1YmU6IFxcZjIxMDtcbiRmYS12YXItZGF0YWJhc2U6IFxcZjFjMDtcbiRmYS12YXItZGVhZjogXFxmMmE0O1xuJGZhLXZhci1kZWxpY2lvdXM6IFxcZjFhNTtcbiRmYS12YXItZGVwbG95ZG9nOiBcXGYzOGU7XG4kZmEtdmFyLWRlc2twcm86IFxcZjM4ZjtcbiRmYS12YXItZGVza3RvcDogXFxmMTA4O1xuJGZhLXZhci1kZXNrdG9wLWFsdDogXFxmMzkwO1xuJGZhLXZhci1kZXZpYW50YXJ0OiBcXGYxYmQ7XG4kZmEtdmFyLWRpYW1vbmQ6IFxcZjIxOTtcbiRmYS12YXItZGlnZzogXFxmMWE2O1xuJGZhLXZhci1kaWdpdGFsLW9jZWFuOiBcXGYzOTE7XG4kZmEtdmFyLWRpc2NvcmQ6IFxcZjM5MjtcbiRmYS12YXItZGlzY291cnNlOiBcXGYzOTM7XG4kZmEtdmFyLWRvY2h1YjogXFxmMzk0O1xuJGZhLXZhci1kb2NrZXI6IFxcZjM5NTtcbiRmYS12YXItZG9sbGFyLXNpZ246IFxcZjE1NTtcbiRmYS12YXItZG90LWNpcmNsZTogXFxmMTkyO1xuJGZhLXZhci1kb3dubG9hZDogXFxmMDE5O1xuJGZhLXZhci1kcmFmdDJkaWdpdGFsOiBcXGYzOTY7XG4kZmEtdmFyLWRyaWJiYmxlOiBcXGYxN2Q7XG4kZmEtdmFyLWRyaWJiYmxlLXNxdWFyZTogXFxmMzk3O1xuJGZhLXZhci1kcm9wYm94OiBcXGYxNmI7XG4kZmEtdmFyLWRydXBhbDogXFxmMWE5O1xuJGZhLXZhci1kdW1iYmVsbDogXFxmNDRiO1xuJGZhLXZhci1keWFsb2c6IFxcZjM5OTtcbiRmYS12YXItZWFybHliaXJkczogXFxmMzlhO1xuJGZhLXZhci1lZGdlOiBcXGYyODI7XG4kZmEtdmFyLWVkaXQ6IFxcZjA0NDtcbiRmYS12YXItZWplY3Q6IFxcZjA1MjtcbiRmYS12YXItZWxlbWVudG9yOiBcXGY0MzA7XG4kZmEtdmFyLWVsbGlwc2lzLWg6IFxcZjE0MTtcbiRmYS12YXItZWxsaXBzaXMtaC1hbHQ6IFxcZjM5YjtcbiRmYS12YXItZWxsaXBzaXMtdjogXFxmMTQyO1xuJGZhLXZhci1lbGxpcHNpcy12LWFsdDogXFxmMzljO1xuJGZhLXZhci1lbWJlcjogXFxmNDIzO1xuJGZhLXZhci1lbXBpcmU6IFxcZjFkMTtcbiRmYS12YXItZW52ZWxvcGU6IFxcZjBlMDtcbiRmYS12YXItZW52ZWxvcGUtb3BlbjogXFxmMmI2O1xuJGZhLXZhci1lbnZlbG9wZS1zcXVhcmU6IFxcZjE5OTtcbiRmYS12YXItZW52aXJhOiBcXGYyOTk7XG4kZmEtdmFyLWVyYXNlcjogXFxmMTJkO1xuJGZhLXZhci1lcmxhbmc6IFxcZjM5ZDtcbiRmYS12YXItZXRoZXJldW06IFxcZjQyZTtcbiRmYS12YXItZXRzeTogXFxmMmQ3O1xuJGZhLXZhci1ldXJvLXNpZ246IFxcZjE1MztcbiRmYS12YXItZXhjaGFuZ2U6IFxcZjBlYztcbiRmYS12YXItZXhjaGFuZ2UtYWx0OiBcXGYzNjI7XG4kZmEtdmFyLWV4Y2xhbWF0aW9uOiBcXGYxMmE7XG4kZmEtdmFyLWV4Y2xhbWF0aW9uLWNpcmNsZTogXFxmMDZhO1xuJGZhLXZhci1leGNsYW1hdGlvbi1zcXVhcmU6IFxcZjMyMTtcbiRmYS12YXItZXhjbGFtYXRpb24tdHJpYW5nbGU6IFxcZjA3MTtcbiRmYS12YXItZXhwYW5kOiBcXGYwNjU7XG4kZmEtdmFyLWV4cGFuZC1hbHQ6IFxcZjQyNDtcbiRmYS12YXItZXhwYW5kLWFycm93czogXFxmMzFkO1xuJGZhLXZhci1leHBhbmQtYXJyb3dzLWFsdDogXFxmMzFlO1xuJGZhLXZhci1leHBhbmQtd2lkZTogXFxmMzIwO1xuJGZhLXZhci1leHBlZGl0ZWRzc2w6IFxcZjIzZTtcbiRmYS12YXItZXh0ZXJuYWwtbGluazogXFxmMDhlO1xuJGZhLXZhci1leHRlcm5hbC1saW5rLWFsdDogXFxmMzVkO1xuJGZhLXZhci1leHRlcm5hbC1saW5rLXNxdWFyZTogXFxmMTRjO1xuJGZhLXZhci1leHRlcm5hbC1saW5rLXNxdWFyZS1hbHQ6IFxcZjM2MDtcbiRmYS12YXItZXllOiBcXGYwNmU7XG4kZmEtdmFyLWV5ZS1kcm9wcGVyOiBcXGYxZmI7XG4kZmEtdmFyLWV5ZS1zbGFzaDogXFxmMDcwO1xuJGZhLXZhci1mYWNlYm9vazogXFxmMDlhO1xuJGZhLXZhci1mYWNlYm9vay1mOiBcXGYzOWU7XG4kZmEtdmFyLWZhY2Vib29rLW1lc3NlbmdlcjogXFxmMzlmO1xuJGZhLXZhci1mYWNlYm9vay1zcXVhcmU6IFxcZjA4MjtcbiRmYS12YXItZmFzdC1iYWNrd2FyZDogXFxmMDQ5O1xuJGZhLXZhci1mYXN0LWZvcndhcmQ6IFxcZjA1MDtcbiRmYS12YXItZmF4OiBcXGYxYWM7XG4kZmEtdmFyLWZlbWFsZTogXFxmMTgyO1xuJGZhLXZhci1maWVsZC1ob2NrZXk6IFxcZjQ0YztcbiRmYS12YXItZmlnaHRlci1qZXQ6IFxcZjBmYjtcbiRmYS12YXItZmlsZTogXFxmMTViO1xuJGZhLXZhci1maWxlLWFsdDogXFxmMTVjO1xuJGZhLXZhci1maWxlLWFyY2hpdmU6IFxcZjFjNjtcbiRmYS12YXItZmlsZS1hdWRpbzogXFxmMWM3O1xuJGZhLXZhci1maWxlLWNoZWNrOiBcXGYzMTY7XG4kZmEtdmFyLWZpbGUtY29kZTogXFxmMWM5O1xuJGZhLXZhci1maWxlLWVkaXQ6IFxcZjMxYztcbiRmYS12YXItZmlsZS1leGNlbDogXFxmMWMzO1xuJGZhLXZhci1maWxlLWV4Y2xhbWF0aW9uOiBcXGYzMWE7XG4kZmEtdmFyLWZpbGUtaW1hZ2U6IFxcZjFjNTtcbiRmYS12YXItZmlsZS1taW51czogXFxmMzE4O1xuJGZhLXZhci1maWxlLXBkZjogXFxmMWMxO1xuJGZhLXZhci1maWxlLXBsdXM6IFxcZjMxOTtcbiRmYS12YXItZmlsZS1wb3dlcnBvaW50OiBcXGYxYzQ7XG4kZmEtdmFyLWZpbGUtdGltZXM6IFxcZjMxNztcbiRmYS12YXItZmlsZS12aWRlbzogXFxmMWM4O1xuJGZhLXZhci1maWxlLXdvcmQ6IFxcZjFjMjtcbiRmYS12YXItZmlsbTogXFxmMDA4O1xuJGZhLXZhci1maWxtLWFsdDogXFxmM2EwO1xuJGZhLXZhci1maWx0ZXI6IFxcZjBiMDtcbiRmYS12YXItZmlyZTogXFxmMDZkO1xuJGZhLXZhci1maXJlLWV4dGluZ3Vpc2hlcjogXFxmMTM0O1xuJGZhLXZhci1maXJlZm94OiBcXGYyNjk7XG4kZmEtdmFyLWZpcnN0LW9yZGVyOiBcXGYyYjA7XG4kZmEtdmFyLWZpcnN0ZHJhZnQ6IFxcZjNhMTtcbiRmYS12YXItZmxhZzogXFxmMDI0O1xuJGZhLXZhci1mbGFnLWNoZWNrZXJlZDogXFxmMTFlO1xuJGZhLXZhci1mbGFzazogXFxmMGMzO1xuJGZhLXZhci1mbGlja3I6IFxcZjE2ZTtcbiRmYS12YXItZmxpcGJvYXJkOiBcXGY0NGQ7XG4kZmEtdmFyLWZseTogXFxmNDE3O1xuJGZhLXZhci1mb2xkZXI6IFxcZjA3YjtcbiRmYS12YXItZm9sZGVyLW9wZW46IFxcZjA3YztcbiRmYS12YXItZm9udDogXFxmMDMxO1xuJGZhLXZhci1mb250LWF3ZXNvbWU6IFxcZjJiNDtcbiRmYS12YXItZm9udC1hd2Vzb21lLWFsdDogXFxmMzVjO1xuJGZhLXZhci1mb250LWF3ZXNvbWUtZmxhZzogXFxmNDI1O1xuJGZhLXZhci1mb250aWNvbnM6IFxcZjI4MDtcbiRmYS12YXItZm9udGljb25zLWZpOiBcXGYzYTI7XG4kZmEtdmFyLWZvb3RiYWxsLWJhbGw6IFxcZjQ0ZTtcbiRmYS12YXItZm9vdGJhbGwtaGVsbWV0OiBcXGY0NGY7XG4kZmEtdmFyLWZvcnQtYXdlc29tZTogXFxmMjg2O1xuJGZhLXZhci1mb3J0LWF3ZXNvbWUtYWx0OiBcXGYzYTM7XG4kZmEtdmFyLWZvcnVtYmVlOiBcXGYyMTE7XG4kZmEtdmFyLWZvcndhcmQ6IFxcZjA0ZTtcbiRmYS12YXItZm91cnNxdWFyZTogXFxmMTgwO1xuJGZhLXZhci1mcmVlLWNvZGUtY2FtcDogXFxmMmM1O1xuJGZhLXZhci1mcmVlYnNkOiBcXGYzYTQ7XG4kZmEtdmFyLWZyb3duOiBcXGYxMTk7XG4kZmEtdmFyLWZ1dGJvbDogXFxmMWUzO1xuJGZhLXZhci1nYW1lcGFkOiBcXGYxMWI7XG4kZmEtdmFyLWdhdmVsOiBcXGYwZTM7XG4kZmEtdmFyLWdlbTogXFxmM2E1O1xuJGZhLXZhci1nZW5kZXJsZXNzOiBcXGYyMmQ7XG4kZmEtdmFyLWdldC1wb2NrZXQ6IFxcZjI2NTtcbiRmYS12YXItZ2c6IFxcZjI2MDtcbiRmYS12YXItZ2ctY2lyY2xlOiBcXGYyNjE7XG4kZmEtdmFyLWdpZnQ6IFxcZjA2YjtcbiRmYS12YXItZ2l0OiBcXGYxZDM7XG4kZmEtdmFyLWdpdC1zcXVhcmU6IFxcZjFkMjtcbiRmYS12YXItZ2l0aHViOiBcXGYwOWI7XG4kZmEtdmFyLWdpdGh1Yi1hbHQ6IFxcZjExMztcbiRmYS12YXItZ2l0aHViLXNxdWFyZTogXFxmMDkyO1xuJGZhLXZhci1naXRrcmFrZW46IFxcZjNhNjtcbiRmYS12YXItZ2l0bGFiOiBcXGYyOTY7XG4kZmEtdmFyLWdpdHRlcjogXFxmNDI2O1xuJGZhLXZhci1nbGFzcy1tYXJ0aW5pOiBcXGYwMDA7XG4kZmEtdmFyLWdsaWRlOiBcXGYyYTU7XG4kZmEtdmFyLWdsaWRlLWc6IFxcZjJhNjtcbiRmYS12YXItZ2xvYmU6IFxcZjBhYztcbiRmYS12YXItZ29mb3JlOiBcXGYzYTc7XG4kZmEtdmFyLWdvbGYtYmFsbDogXFxmNDUwO1xuJGZhLXZhci1nb2xmLWNsdWI6IFxcZjQ1MTtcbiRmYS12YXItZ29vZHJlYWRzOiBcXGYzYTg7XG4kZmEtdmFyLWdvb2RyZWFkcy1nOiBcXGYzYTk7XG4kZmEtdmFyLWdvb2dsZTogXFxmMWEwO1xuJGZhLXZhci1nb29nbGUtZHJpdmU6IFxcZjNhYTtcbiRmYS12YXItZ29vZ2xlLXBsYXk6IFxcZjNhYjtcbiRmYS12YXItZ29vZ2xlLXBsdXM6IFxcZjJiMztcbiRmYS12YXItZ29vZ2xlLXBsdXMtZzogXFxmMGQ1O1xuJGZhLXZhci1nb29nbGUtcGx1cy1zcXVhcmU6IFxcZjBkNDtcbiRmYS12YXItZ29vZ2xlLXdhbGxldDogXFxmMWVlO1xuJGZhLXZhci1ncmFkdWF0aW9uLWNhcDogXFxmMTlkO1xuJGZhLXZhci1ncmF0aXBheTogXFxmMTg0O1xuJGZhLXZhci1ncmF2OiBcXGYyZDY7XG4kZmEtdmFyLWdyaXBmaXJlOiBcXGYzYWM7XG4kZmEtdmFyLWdydW50OiBcXGYzYWQ7XG4kZmEtdmFyLWd1bHA6IFxcZjNhZTtcbiRmYS12YXItaC1zcXVhcmU6IFxcZjBmZDtcbiRmYS12YXItaDE6IFxcZjMxMztcbiRmYS12YXItaDI6IFxcZjMxNDtcbiRmYS12YXItaDM6IFxcZjMxNTtcbiRmYS12YXItaGFja2VyLW5ld3M6IFxcZjFkNDtcbiRmYS12YXItaGFja2VyLW5ld3Mtc3F1YXJlOiBcXGYzYWY7XG4kZmEtdmFyLWhhbmQtbGl6YXJkOiBcXGYyNTg7XG4kZmEtdmFyLWhhbmQtcGFwZXI6IFxcZjI1NjtcbiRmYS12YXItaGFuZC1wZWFjZTogXFxmMjViO1xuJGZhLXZhci1oYW5kLXBvaW50LWRvd246IFxcZjBhNztcbiRmYS12YXItaGFuZC1wb2ludC1sZWZ0OiBcXGYwYTU7XG4kZmEtdmFyLWhhbmQtcG9pbnQtcmlnaHQ6IFxcZjBhNDtcbiRmYS12YXItaGFuZC1wb2ludC11cDogXFxmMGE2O1xuJGZhLXZhci1oYW5kLXBvaW50ZXI6IFxcZjI1YTtcbiRmYS12YXItaGFuZC1yb2NrOiBcXGYyNTU7XG4kZmEtdmFyLWhhbmQtc2Npc3NvcnM6IFxcZjI1NztcbiRmYS12YXItaGFuZC1zcG9jazogXFxmMjU5O1xuJGZhLXZhci1oYW5kc2hha2U6IFxcZjJiNTtcbiRmYS12YXItaGFzaHRhZzogXFxmMjkyO1xuJGZhLXZhci1oZGQ6IFxcZjBhMDtcbiRmYS12YXItaGVhZGluZzogXFxmMWRjO1xuJGZhLXZhci1oZWFkcGhvbmVzOiBcXGYwMjU7XG4kZmEtdmFyLWhlYXJ0OiBcXGYwMDQ7XG4kZmEtdmFyLWhlYXJ0YmVhdDogXFxmMjFlO1xuJGZhLXZhci1oZXhhZ29uOiBcXGYzMTI7XG4kZmEtdmFyLWhpcHM6IFxcZjQ1MjtcbiRmYS12YXItaGlyZS1hLWhlbHBlcjogXFxmM2IwO1xuJGZhLXZhci1oaXN0b3J5OiBcXGYxZGE7XG4kZmEtdmFyLWhvY2tleS1wdWNrOiBcXGY0NTM7XG4kZmEtdmFyLWhvY2tleS1zdGlja3M6IFxcZjQ1NDtcbiRmYS12YXItaG9tZTogXFxmMDE1O1xuJGZhLXZhci1ob29saTogXFxmNDI3O1xuJGZhLXZhci1ob3NwaXRhbDogXFxmMGY4O1xuJGZhLXZhci1ob3RqYXI6IFxcZjNiMTtcbiRmYS12YXItaG91cmdsYXNzOiBcXGYyNTQ7XG4kZmEtdmFyLWhvdXJnbGFzcy1lbmQ6IFxcZjI1MztcbiRmYS12YXItaG91cmdsYXNzLWhhbGY6IFxcZjI1MjtcbiRmYS12YXItaG91cmdsYXNzLXN0YXJ0OiBcXGYyNTE7XG4kZmEtdmFyLWhvdXp6OiBcXGYyN2M7XG4kZmEtdmFyLWh0bWw1OiBcXGYxM2I7XG4kZmEtdmFyLWh1YnNwb3Q6IFxcZjNiMjtcbiRmYS12YXItaS1jdXJzb3I6IFxcZjI0NjtcbiRmYS12YXItaWQtYmFkZ2U6IFxcZjJjMTtcbiRmYS12YXItaWQtY2FyZDogXFxmMmMyO1xuJGZhLXZhci1pbWFnZTogXFxmMDNlO1xuJGZhLXZhci1pbWFnZXM6IFxcZjMwMjtcbiRmYS12YXItaW1kYjogXFxmMmQ4O1xuJGZhLXZhci1pbmJveDogXFxmMDFjO1xuJGZhLXZhci1pbmJveC1pbjogXFxmMzEwO1xuJGZhLXZhci1pbmJveC1vdXQ6IFxcZjMxMTtcbiRmYS12YXItaW5kZW50OiBcXGYwM2M7XG4kZmEtdmFyLWluZHVzdHJ5OiBcXGYyNzU7XG4kZmEtdmFyLWluZHVzdHJ5LWFsdDogXFxmM2IzO1xuJGZhLXZhci1pbmZvOiBcXGYxMjk7XG4kZmEtdmFyLWluZm8tY2lyY2xlOiBcXGYwNWE7XG4kZmEtdmFyLWluZm8tc3F1YXJlOiBcXGYzMGY7XG4kZmEtdmFyLWluc3RhZ3JhbTogXFxmMTZkO1xuJGZhLXZhci1pbnRlcm5ldC1leHBsb3JlcjogXFxmMjZiO1xuJGZhLXZhci1pb3hob3N0OiBcXGYyMDg7XG4kZmEtdmFyLWl0YWxpYzogXFxmMDMzO1xuJGZhLXZhci1pdHVuZXM6IFxcZjNiNDtcbiRmYS12YXItaXR1bmVzLW5vdGU6IFxcZjNiNTtcbiRmYS12YXItamFjay1vLWxhbnRlcm46IFxcZjMwZTtcbiRmYS12YXItamVua2luczogXFxmM2I2O1xuJGZhLXZhci1qb2dldDogXFxmM2I3O1xuJGZhLXZhci1qb29tbGE6IFxcZjFhYTtcbiRmYS12YXItanM6IFxcZjNiODtcbiRmYS12YXItanMtc3F1YXJlOiBcXGYzYjk7XG4kZmEtdmFyLWpzZmlkZGxlOiBcXGYxY2M7XG4kZmEtdmFyLWtleTogXFxmMDg0O1xuJGZhLXZhci1rZXlib2FyZDogXFxmMTFjO1xuJGZhLXZhci1rZXljZG46IFxcZjNiYTtcbiRmYS12YXIta2lja3N0YXJ0ZXI6IFxcZjNiYjtcbiRmYS12YXIta2lja3N0YXJ0ZXItazogXFxmM2JjO1xuJGZhLXZhci1rb3J2dWU6IFxcZjQyZjtcbiRmYS12YXItbGFuZ3VhZ2U6IFxcZjFhYjtcbiRmYS12YXItbGFwdG9wOiBcXGYxMDk7XG4kZmEtdmFyLWxhcmF2ZWw6IFxcZjNiZDtcbiRmYS12YXItbGFzdGZtOiBcXGYyMDI7XG4kZmEtdmFyLWxhc3RmbS1zcXVhcmU6IFxcZjIwMztcbiRmYS12YXItbGVhZjogXFxmMDZjO1xuJGZhLXZhci1sZWFucHViOiBcXGYyMTI7XG4kZmEtdmFyLWxlbW9uOiBcXGYwOTQ7XG4kZmEtdmFyLWxlc3M6IFxcZjQxZDtcbiRmYS12YXItbGV2ZWwtZG93bjogXFxmMTQ5O1xuJGZhLXZhci1sZXZlbC1kb3duLWFsdDogXFxmM2JlO1xuJGZhLXZhci1sZXZlbC11cDogXFxmMTQ4O1xuJGZhLXZhci1sZXZlbC11cC1hbHQ6IFxcZjNiZjtcbiRmYS12YXItbGlmZS1yaW5nOiBcXGYxY2Q7XG4kZmEtdmFyLWxpZ2h0YnVsYjogXFxmMGViO1xuJGZhLXZhci1saW5lOiBcXGYzYzA7XG4kZmEtdmFyLWxpbms6IFxcZjBjMTtcbiRmYS12YXItbGlua2VkaW46IFxcZjA4YztcbiRmYS12YXItbGlua2VkaW4taW46IFxcZjBlMTtcbiRmYS12YXItbGlub2RlOiBcXGYyYjg7XG4kZmEtdmFyLWxpbnV4OiBcXGYxN2M7XG4kZmEtdmFyLWxpcmEtc2lnbjogXFxmMTk1O1xuJGZhLXZhci1saXN0OiBcXGYwM2E7XG4kZmEtdmFyLWxpc3QtYWx0OiBcXGYwMjI7XG4kZmEtdmFyLWxpc3Qtb2w6IFxcZjBjYjtcbiRmYS12YXItbGlzdC11bDogXFxmMGNhO1xuJGZhLXZhci1sb2NhdGlvbi1hcnJvdzogXFxmMTI0O1xuJGZhLXZhci1sb2NrOiBcXGYwMjM7XG4kZmEtdmFyLWxvY2stYWx0OiBcXGYzMGQ7XG4kZmEtdmFyLWxvY2stb3BlbjogXFxmM2MxO1xuJGZhLXZhci1sb2NrLW9wZW4tYWx0OiBcXGYzYzI7XG4kZmEtdmFyLWxvbmctYXJyb3ctYWx0LWRvd246IFxcZjMwOTtcbiRmYS12YXItbG9uZy1hcnJvdy1hbHQtbGVmdDogXFxmMzBhO1xuJGZhLXZhci1sb25nLWFycm93LWFsdC1yaWdodDogXFxmMzBiO1xuJGZhLXZhci1sb25nLWFycm93LWFsdC11cDogXFxmMzBjO1xuJGZhLXZhci1sb25nLWFycm93LWRvd246IFxcZjE3NTtcbiRmYS12YXItbG9uZy1hcnJvdy1sZWZ0OiBcXGYxNzc7XG4kZmEtdmFyLWxvbmctYXJyb3ctcmlnaHQ6IFxcZjE3ODtcbiRmYS12YXItbG9uZy1hcnJvdy11cDogXFxmMTc2O1xuJGZhLXZhci1sb3ctdmlzaW9uOiBcXGYyYTg7XG4kZmEtdmFyLWx1Y2hhZG9yOiBcXGY0NTU7XG4kZmEtdmFyLWx5ZnQ6IFxcZjNjMztcbiRmYS12YXItbWFnZW50bzogXFxmM2M0O1xuJGZhLXZhci1tYWdpYzogXFxmMGQwO1xuJGZhLXZhci1tYWduZXQ6IFxcZjA3NjtcbiRmYS12YXItbWFsZTogXFxmMTgzO1xuJGZhLXZhci1tYXA6IFxcZjI3OTtcbiRmYS12YXItbWFwLW1hcmtlcjogXFxmMDQxO1xuJGZhLXZhci1tYXAtbWFya2VyLWFsdDogXFxmM2M1O1xuJGZhLXZhci1tYXAtcGluOiBcXGYyNzY7XG4kZmEtdmFyLW1hcC1zaWduczogXFxmMjc3O1xuJGZhLXZhci1tYXJzOiBcXGYyMjI7XG4kZmEtdmFyLW1hcnMtZG91YmxlOiBcXGYyMjc7XG4kZmEtdmFyLW1hcnMtc3Ryb2tlOiBcXGYyMjk7XG4kZmEtdmFyLW1hcnMtc3Ryb2tlLWg6IFxcZjIyYjtcbiRmYS12YXItbWFycy1zdHJva2UtdjogXFxmMjJhO1xuJGZhLXZhci1tYXhjZG46IFxcZjEzNjtcbiRmYS12YXItbWVkYXBwczogXFxmM2M2O1xuJGZhLXZhci1tZWRpdW06IFxcZjIzYTtcbiRmYS12YXItbWVkaXVtLW06IFxcZjNjNztcbiRmYS12YXItbWVka2l0OiBcXGYwZmE7XG4kZmEtdmFyLW1lZHJ0OiBcXGYzYzg7XG4kZmEtdmFyLW1lZXR1cDogXFxmMmUwO1xuJGZhLXZhci1tZWg6IFxcZjExYTtcbiRmYS12YXItbWVyY3VyeTogXFxmMjIzO1xuJGZhLXZhci1taWNyb2NoaXA6IFxcZjJkYjtcbiRmYS12YXItbWljcm9waG9uZTogXFxmMTMwO1xuJGZhLXZhci1taWNyb3Bob25lLWFsdDogXFxmM2M5O1xuJGZhLXZhci1taWNyb3Bob25lLXNsYXNoOiBcXGYxMzE7XG4kZmEtdmFyLW1pY3Jvc29mdDogXFxmM2NhO1xuJGZhLXZhci1taW51czogXFxmMDY4O1xuJGZhLXZhci1taW51cy1jaXJjbGU6IFxcZjA1NjtcbiRmYS12YXItbWludXMtaGV4YWdvbjogXFxmMzA3O1xuJGZhLXZhci1taW51cy1vY3RhZ29uOiBcXGYzMDg7XG4kZmEtdmFyLW1pbnVzLXNxdWFyZTogXFxmMTQ2O1xuJGZhLXZhci1taXg6IFxcZjNjYjtcbiRmYS12YXItbWl4Y2xvdWQ6IFxcZjI4OTtcbiRmYS12YXItbWl6dW5pOiBcXGYzY2M7XG4kZmEtdmFyLW1vYmlsZTogXFxmMTBiO1xuJGZhLXZhci1tb2JpbGUtYWx0OiBcXGYzY2Q7XG4kZmEtdmFyLW1vYmlsZS1hbmRyb2lkOiBcXGYzY2U7XG4kZmEtdmFyLW1vYmlsZS1hbmRyb2lkLWFsdDogXFxmM2NmO1xuJGZhLXZhci1tb2R4OiBcXGYyODU7XG4kZmEtdmFyLW1vbmVybzogXFxmM2QwO1xuJGZhLXZhci1tb25leS1iaWxsOiBcXGYwZDY7XG4kZmEtdmFyLW1vbmV5LWJpbGwtYWx0OiBcXGYzZDE7XG4kZmEtdmFyLW1vb246IFxcZjE4NjtcbiRmYS12YXItbW90b3JjeWNsZTogXFxmMjFjO1xuJGZhLXZhci1tb3VzZS1wb2ludGVyOiBcXGYyNDU7XG4kZmEtdmFyLW11c2ljOiBcXGYwMDE7XG4kZmEtdmFyLW5hcHN0ZXI6IFxcZjNkMjtcbiRmYS12YXItbmV1dGVyOiBcXGYyMmM7XG4kZmEtdmFyLW5ld3NwYXBlcjogXFxmMWVhO1xuJGZhLXZhci1uaW50ZW5kby1zd2l0Y2g6IFxcZjQxODtcbiRmYS12YXItbm9kZTogXFxmNDE5O1xuJGZhLXZhci1ub2RlLWpzOiBcXGYzZDM7XG4kZmEtdmFyLW5wbTogXFxmM2Q0O1xuJGZhLXZhci1uczg6IFxcZjNkNTtcbiRmYS12YXItbnV0cml0aW9uaXg6IFxcZjNkNjtcbiRmYS12YXItb2JqZWN0LWdyb3VwOiBcXGYyNDc7XG4kZmEtdmFyLW9iamVjdC11bmdyb3VwOiBcXGYyNDg7XG4kZmEtdmFyLW9jdGFnb246IFxcZjMwNjtcbiRmYS12YXItb2Rub2tsYXNzbmlraTogXFxmMjYzO1xuJGZhLXZhci1vZG5va2xhc3NuaWtpLXNxdWFyZTogXFxmMjY0O1xuJGZhLXZhci1vcGVuY2FydDogXFxmMjNkO1xuJGZhLXZhci1vcGVuaWQ6IFxcZjE5YjtcbiRmYS12YXItb3BlcmE6IFxcZjI2YTtcbiRmYS12YXItb3B0aW4tbW9uc3RlcjogXFxmMjNjO1xuJGZhLXZhci1vc2k6IFxcZjQxYTtcbiRmYS12YXItb3V0ZGVudDogXFxmMDNiO1xuJGZhLXZhci1wYWdlNDogXFxmM2Q3O1xuJGZhLXZhci1wYWdlbGluZXM6IFxcZjE4YztcbiRmYS12YXItcGFpbnQtYnJ1c2g6IFxcZjFmYztcbiRmYS12YXItcGFsZmVkOiBcXGYzZDg7XG4kZmEtdmFyLXBhcGVyLXBsYW5lOiBcXGYxZDg7XG4kZmEtdmFyLXBhcGVyY2xpcDogXFxmMGM2O1xuJGZhLXZhci1wYXJhZ3JhcGg6IFxcZjFkZDtcbiRmYS12YXItcGFzdGU6IFxcZjBlYTtcbiRmYS12YXItcGF0cmVvbjogXFxmM2Q5O1xuJGZhLXZhci1wYXVzZTogXFxmMDRjO1xuJGZhLXZhci1wYXVzZS1jaXJjbGU6IFxcZjI4YjtcbiRmYS12YXItcGF3OiBcXGYxYjA7XG4kZmEtdmFyLXBheXBhbDogXFxmMWVkO1xuJGZhLXZhci1wZW46IFxcZjMwNDtcbiRmYS12YXItcGVuLWFsdDogXFxmMzA1O1xuJGZhLXZhci1wZW4tc3F1YXJlOiBcXGYxNGI7XG4kZmEtdmFyLXBlbmNpbDogXFxmMDQwO1xuJGZhLXZhci1wZW5jaWwtYWx0OiBcXGYzMDM7XG4kZmEtdmFyLXBlbm5hbnQ6IFxcZjQ1NjtcbiRmYS12YXItcGVyY2VudDogXFxmMjk1O1xuJGZhLXZhci1wZXJpc2NvcGU6IFxcZjNkYTtcbiRmYS12YXItcGhhYnJpY2F0b3I6IFxcZjNkYjtcbiRmYS12YXItcGhvZW5peC1mcmFtZXdvcms6IFxcZjNkYztcbiRmYS12YXItcGhvbmU6IFxcZjA5NTtcbiRmYS12YXItcGhvbmUtc2xhc2g6IFxcZjNkZDtcbiRmYS12YXItcGhvbmUtc3F1YXJlOiBcXGYwOTg7XG4kZmEtdmFyLXBob25lLXZvbHVtZTogXFxmMmEwO1xuJGZhLXZhci1waHA6IFxcZjQ1NztcbiRmYS12YXItcGllZC1waXBlcjogXFxmMmFlO1xuJGZhLXZhci1waWVkLXBpcGVyLWFsdDogXFxmMWE4O1xuJGZhLXZhci1waWVkLXBpcGVyLXBwOiBcXGYxYTc7XG4kZmEtdmFyLXBpbnRlcmVzdDogXFxmMGQyO1xuJGZhLXZhci1waW50ZXJlc3QtcDogXFxmMjMxO1xuJGZhLXZhci1waW50ZXJlc3Qtc3F1YXJlOiBcXGYwZDM7XG4kZmEtdmFyLXBsYW5lOiBcXGYwNzI7XG4kZmEtdmFyLXBsYW5lLWFsdDogXFxmM2RlO1xuJGZhLXZhci1wbGF5OiBcXGYwNGI7XG4kZmEtdmFyLXBsYXktY2lyY2xlOiBcXGYxNDQ7XG4kZmEtdmFyLXBsYXlzdGF0aW9uOiBcXGYzZGY7XG4kZmEtdmFyLXBsdWc6IFxcZjFlNjtcbiRmYS12YXItcGx1czogXFxmMDY3O1xuJGZhLXZhci1wbHVzLWNpcmNsZTogXFxmMDU1O1xuJGZhLXZhci1wbHVzLWhleGFnb246IFxcZjMwMDtcbiRmYS12YXItcGx1cy1vY3RhZ29uOiBcXGYzMDE7XG4kZmEtdmFyLXBsdXMtc3F1YXJlOiBcXGYwZmU7XG4kZmEtdmFyLXBvZGNhc3Q6IFxcZjJjZTtcbiRmYS12YXItcG9vOiBcXGYyZmU7XG4kZmEtdmFyLXBvcnRyYWl0OiBcXGYzZTA7XG4kZmEtdmFyLXBvdW5kLXNpZ246IFxcZjE1NDtcbiRmYS12YXItcG93ZXItb2ZmOiBcXGYwMTE7XG4kZmEtdmFyLXByaW50OiBcXGYwMmY7XG4kZmEtdmFyLXByb2R1Y3QtaHVudDogXFxmMjg4O1xuJGZhLXZhci1wdXNoZWQ6IFxcZjNlMTtcbiRmYS12YXItcHV6emxlLXBpZWNlOiBcXGYxMmU7XG4kZmEtdmFyLXB5dGhvbjogXFxmM2UyO1xuJGZhLXZhci1xcTogXFxmMWQ2O1xuJGZhLXZhci1xcmNvZGU6IFxcZjAyOTtcbiRmYS12YXItcXVlc3Rpb246IFxcZjEyODtcbiRmYS12YXItcXVlc3Rpb24tY2lyY2xlOiBcXGYwNTk7XG4kZmEtdmFyLXF1ZXN0aW9uLXNxdWFyZTogXFxmMmZkO1xuJGZhLXZhci1xdWlkZGl0Y2g6IFxcZjQ1ODtcbiRmYS12YXItcXVpbnNjYXBlOiBcXGY0NTk7XG4kZmEtdmFyLXF1b3JhOiBcXGYyYzQ7XG4kZmEtdmFyLXF1b3RlLWxlZnQ6IFxcZjEwZDtcbiRmYS12YXItcXVvdGUtcmlnaHQ6IFxcZjEwZTtcbiRmYS12YXItcmFjcXVldDogXFxmNDVhO1xuJGZhLXZhci1yYW5kb206IFxcZjA3NDtcbiRmYS12YXItcmF2ZWxyeTogXFxmMmQ5O1xuJGZhLXZhci1yZWFjdDogXFxmNDFiO1xuJGZhLXZhci1yZWJlbDogXFxmMWQwO1xuJGZhLXZhci1yZWN0YW5nbGUtbGFuZHNjYXBlOiBcXGYyZmE7XG4kZmEtdmFyLXJlY3RhbmdsZS1wb3J0cmFpdDogXFxmMmZiO1xuJGZhLXZhci1yZWN0YW5nbGUtd2lkZTogXFxmMmZjO1xuJGZhLXZhci1yZWN5Y2xlOiBcXGYxYjg7XG4kZmEtdmFyLXJlZC1yaXZlcjogXFxmM2UzO1xuJGZhLXZhci1yZWRkaXQ6IFxcZjFhMTtcbiRmYS12YXItcmVkZGl0LWFsaWVuOiBcXGYyODE7XG4kZmEtdmFyLXJlZGRpdC1zcXVhcmU6IFxcZjFhMjtcbiRmYS12YXItcmVkbzogXFxmMDFlO1xuJGZhLXZhci1yZWRvLWFsdDogXFxmMmY5O1xuJGZhLXZhci1yZWdpc3RlcmVkOiBcXGYyNWQ7XG4kZmEtdmFyLXJlbmRhY3Q6IFxcZjNlNDtcbiRmYS12YXItcmVucmVuOiBcXGYxOGI7XG4kZmEtdmFyLXJlcGVhdDogXFxmMzYzO1xuJGZhLXZhci1yZXBlYXQtMTogXFxmMzY1O1xuJGZhLXZhci1yZXBlYXQtMS1hbHQ6IFxcZjM2NjtcbiRmYS12YXItcmVwZWF0LWFsdDogXFxmMzY0O1xuJGZhLXZhci1yZXBseTogXFxmM2U1O1xuJGZhLXZhci1yZXBseS1hbGw6IFxcZjEyMjtcbiRmYS12YXItcmVwbHlkOiBcXGYzZTY7XG4kZmEtdmFyLXJlc29sdmluZzogXFxmM2U3O1xuJGZhLXZhci1yZXR3ZWV0OiBcXGYwNzk7XG4kZmEtdmFyLXJldHdlZXQtYWx0OiBcXGYzNjE7XG4kZmEtdmFyLXJvYWQ6IFxcZjAxODtcbiRmYS12YXItcm9ja2V0OiBcXGYxMzU7XG4kZmEtdmFyLXJvY2tldGNoYXQ6IFxcZjNlODtcbiRmYS12YXItcm9ja3JtczogXFxmM2U5O1xuJGZhLXZhci1yc3M6IFxcZjA5ZTtcbiRmYS12YXItcnNzLXNxdWFyZTogXFxmMTQzO1xuJGZhLXZhci1ydWJsZS1zaWduOiBcXGYxNTg7XG4kZmEtdmFyLXJ1cGVlLXNpZ246IFxcZjE1NjtcbiRmYS12YXItc2FmYXJpOiBcXGYyNjc7XG4kZmEtdmFyLXNhc3M6IFxcZjQxZTtcbiRmYS12YXItc2F2ZTogXFxmMGM3O1xuJGZhLXZhci1zY2hsaXg6IFxcZjNlYTtcbiRmYS12YXItc2NyaWJkOiBcXGYyOGE7XG4kZmEtdmFyLXNjcnViYmVyOiBcXGYyZjg7XG4kZmEtdmFyLXNlYXJjaDogXFxmMDAyO1xuJGZhLXZhci1zZWFyY2gtbWludXM6IFxcZjAxMDtcbiRmYS12YXItc2VhcmNoLXBsdXM6IFxcZjAwZTtcbiRmYS12YXItc2VhcmNoZW5naW46IFxcZjNlYjtcbiRmYS12YXItc2VsbGNhc3Q6IFxcZjJkYTtcbiRmYS12YXItc2VsbHN5OiBcXGYyMTM7XG4kZmEtdmFyLXNlcnZlcjogXFxmMjMzO1xuJGZhLXZhci1zZXJ2aWNlc3RhY2s6IFxcZjNlYztcbiRmYS12YXItc2hhcmU6IFxcZjA2NDtcbiRmYS12YXItc2hhcmUtYWxsOiBcXGYzNjc7XG4kZmEtdmFyLXNoYXJlLWFsdDogXFxmMWUwO1xuJGZhLXZhci1zaGFyZS1hbHQtc3F1YXJlOiBcXGYxZTE7XG4kZmEtdmFyLXNoYXJlLXNxdWFyZTogXFxmMTRkO1xuJGZhLXZhci1zaGVrZWwtc2lnbjogXFxmMjBiO1xuJGZhLXZhci1zaGllbGQ6IFxcZjEzMjtcbiRmYS12YXItc2hpZWxkLWFsdDogXFxmM2VkO1xuJGZhLXZhci1zaGllbGQtY2hlY2s6IFxcZjJmNztcbiRmYS12YXItc2hpcDogXFxmMjFhO1xuJGZhLXZhci1zaGlydHNpbmJ1bGs6IFxcZjIxNDtcbiRmYS12YXItc2hvcHBpbmctYmFnOiBcXGYyOTA7XG4kZmEtdmFyLXNob3BwaW5nLWJhc2tldDogXFxmMjkxO1xuJGZhLXZhci1zaG9wcGluZy1jYXJ0OiBcXGYwN2E7XG4kZmEtdmFyLXNob3dlcjogXFxmMmNjO1xuJGZhLXZhci1zaHV0dGxlY29jazogXFxmNDViO1xuJGZhLXZhci1zaWduLWluOiBcXGYwOTA7XG4kZmEtdmFyLXNpZ24taW4tYWx0OiBcXGYyZjY7XG4kZmEtdmFyLXNpZ24tbGFuZ3VhZ2U6IFxcZjJhNztcbiRmYS12YXItc2lnbi1vdXQ6IFxcZjA4YjtcbiRmYS12YXItc2lnbi1vdXQtYWx0OiBcXGYyZjU7XG4kZmEtdmFyLXNpZ25hbDogXFxmMDEyO1xuJGZhLXZhci1zaW1wbHlidWlsdDogXFxmMjE1O1xuJGZhLXZhci1zaXN0cml4OiBcXGYzZWU7XG4kZmEtdmFyLXNpdGVtYXA6IFxcZjBlODtcbiRmYS12YXItc2t5YXRsYXM6IFxcZjIxNjtcbiRmYS12YXItc2t5cGU6IFxcZjE3ZTtcbiRmYS12YXItc2xhY2s6IFxcZjE5ODtcbiRmYS12YXItc2xhY2staGFzaDogXFxmM2VmO1xuJGZhLXZhci1zbGlkZXJzLWg6IFxcZjFkZTtcbiRmYS12YXItc2xpZGVycy1oLXNxdWFyZTogXFxmM2YwO1xuJGZhLXZhci1zbGlkZXJzLXY6IFxcZjNmMTtcbiRmYS12YXItc2xpZGVycy12LXNxdWFyZTogXFxmM2YyO1xuJGZhLXZhci1zbGlkZXNoYXJlOiBcXGYxZTc7XG4kZmEtdmFyLXNtaWxlOiBcXGYxMTg7XG4kZmEtdmFyLXNuYXBjaGF0OiBcXGYyYWI7XG4kZmEtdmFyLXNuYXBjaGF0LWdob3N0OiBcXGYyYWM7XG4kZmEtdmFyLXNuYXBjaGF0LXNxdWFyZTogXFxmMmFkO1xuJGZhLXZhci1zbm93Zmxha2U6IFxcZjJkYztcbiRmYS12YXItc29ydDogXFxmMGRjO1xuJGZhLXZhci1zb3J0LWFscGhhLWRvd246IFxcZjE1ZDtcbiRmYS12YXItc29ydC1hbHBoYS11cDogXFxmMTVlO1xuJGZhLXZhci1zb3J0LWFtb3VudC1kb3duOiBcXGYxNjA7XG4kZmEtdmFyLXNvcnQtYW1vdW50LXVwOiBcXGYxNjE7XG4kZmEtdmFyLXNvcnQtZG93bjogXFxmMGRkO1xuJGZhLXZhci1zb3J0LW51bWVyaWMtZG93bjogXFxmMTYyO1xuJGZhLXZhci1zb3J0LW51bWVyaWMtdXA6IFxcZjE2MztcbiRmYS12YXItc29ydC11cDogXFxmMGRlO1xuJGZhLXZhci1zb3VuZGNsb3VkOiBcXGYxYmU7XG4kZmEtdmFyLXNwYWNlLXNodXR0bGU6IFxcZjE5NztcbiRmYS12YXItc3BhZGU6IFxcZjJmNDtcbiRmYS12YXItc3BlYWthcDogXFxmM2YzO1xuJGZhLXZhci1zcGlubmVyOiBcXGYxMTA7XG4kZmEtdmFyLXNwaW5uZXItdGhpcmQ6IFxcZjNmNDtcbiRmYS12YXItc3BvdGlmeTogXFxmMWJjO1xuJGZhLXZhci1zcXVhcmU6IFxcZjBjODtcbiRmYS12YXItc3F1YXJlLWZ1bGw6IFxcZjQ1YztcbiRmYS12YXItc3RhY2stZXhjaGFuZ2U6IFxcZjE4ZDtcbiRmYS12YXItc3RhY2stb3ZlcmZsb3c6IFxcZjE2YztcbiRmYS12YXItc3RhcjogXFxmMDA1O1xuJGZhLXZhci1zdGFyLWV4Y2xhbWF0aW9uOiBcXGYyZjM7XG4kZmEtdmFyLXN0YXItaGFsZjogXFxmMDg5O1xuJGZhLXZhci1zdGF5bGlua2VkOiBcXGYzZjU7XG4kZmEtdmFyLXN0ZWFtOiBcXGYxYjY7XG4kZmEtdmFyLXN0ZWFtLXNxdWFyZTogXFxmMWI3O1xuJGZhLXZhci1zdGVhbS1zeW1ib2w6IFxcZjNmNjtcbiRmYS12YXItc3RlcC1iYWNrd2FyZDogXFxmMDQ4O1xuJGZhLXZhci1zdGVwLWZvcndhcmQ6IFxcZjA1MTtcbiRmYS12YXItc3RldGhvc2NvcGU6IFxcZjBmMTtcbiRmYS12YXItc3RpY2tlci1tdWxlOiBcXGYzZjc7XG4kZmEtdmFyLXN0aWNreS1ub3RlOiBcXGYyNDk7XG4kZmEtdmFyLXN0b3A6IFxcZjA0ZDtcbiRmYS12YXItc3RvcC1jaXJjbGU6IFxcZjI4ZDtcbiRmYS12YXItc3RvcHdhdGNoOiBcXGYyZjI7XG4kZmEtdmFyLXN0cmF2YTogXFxmNDI4O1xuJGZhLXZhci1zdHJlZXQtdmlldzogXFxmMjFkO1xuJGZhLXZhci1zdHJpa2V0aHJvdWdoOiBcXGYwY2M7XG4kZmEtdmFyLXN0cmlwZTogXFxmNDI5O1xuJGZhLXZhci1zdHJpcGUtczogXFxmNDJhO1xuJGZhLXZhci1zdHVkaW92aW5hcmk6IFxcZjNmODtcbiRmYS12YXItc3R1bWJsZXVwb246IFxcZjFhNDtcbiRmYS12YXItc3R1bWJsZXVwb24tY2lyY2xlOiBcXGYxYTM7XG4kZmEtdmFyLXN1YnNjcmlwdDogXFxmMTJjO1xuJGZhLXZhci1zdWJ3YXk6IFxcZjIzOTtcbiRmYS12YXItc3VpdGNhc2U6IFxcZjBmMjtcbiRmYS12YXItc3VuOiBcXGYxODU7XG4kZmEtdmFyLXN1cGVycG93ZXJzOiBcXGYyZGQ7XG4kZmEtdmFyLXN1cGVyc2NyaXB0OiBcXGYxMmI7XG4kZmEtdmFyLXN1cHBsZTogXFxmM2Y5O1xuJGZhLXZhci1zeW5jOiBcXGYwMjE7XG4kZmEtdmFyLXN5bmMtYWx0OiBcXGYyZjE7XG4kZmEtdmFyLXRhYmxlOiBcXGYwY2U7XG4kZmEtdmFyLXRhYmxlLXRlbm5pczogXFxmNDVkO1xuJGZhLXZhci10YWJsZXQ6IFxcZjEwYTtcbiRmYS12YXItdGFibGV0LWFsdDogXFxmM2ZhO1xuJGZhLXZhci10YWJsZXQtYW5kcm9pZDogXFxmM2ZiO1xuJGZhLXZhci10YWJsZXQtYW5kcm9pZC1hbHQ6IFxcZjNmYztcbiRmYS12YXItdGFjaG9tZXRlcjogXFxmMGU0O1xuJGZhLXZhci10YWNob21ldGVyLWFsdDogXFxmM2ZkO1xuJGZhLXZhci10YWc6IFxcZjAyYjtcbiRmYS12YXItdGFnczogXFxmMDJjO1xuJGZhLXZhci10YXNrczogXFxmMGFlO1xuJGZhLXZhci10YXhpOiBcXGYxYmE7XG4kZmEtdmFyLXRlbGVncmFtOiBcXGYyYzY7XG4kZmEtdmFyLXRlbGVncmFtLXBsYW5lOiBcXGYzZmU7XG4kZmEtdmFyLXRlbmNlbnQtd2VpYm86IFxcZjFkNTtcbiRmYS12YXItdGVubmlzLWJhbGw6IFxcZjQ1ZTtcbiRmYS12YXItdGVybWluYWw6IFxcZjEyMDtcbiRmYS12YXItdGV4dC1oZWlnaHQ6IFxcZjAzNDtcbiRmYS12YXItdGV4dC13aWR0aDogXFxmMDM1O1xuJGZhLXZhci10aDogXFxmMDBhO1xuJGZhLXZhci10aC1sYXJnZTogXFxmMDA5O1xuJGZhLXZhci10aC1saXN0OiBcXGYwMGI7XG4kZmEtdmFyLXRoZW1laXNsZTogXFxmMmIyO1xuJGZhLXZhci10aGVybW9tZXRlci1lbXB0eTogXFxmMmNiO1xuJGZhLXZhci10aGVybW9tZXRlci1mdWxsOiBcXGYyYzc7XG4kZmEtdmFyLXRoZXJtb21ldGVyLWhhbGY6IFxcZjJjOTtcbiRmYS12YXItdGhlcm1vbWV0ZXItcXVhcnRlcjogXFxmMmNhO1xuJGZhLXZhci10aGVybW9tZXRlci10aHJlZS1xdWFydGVyczogXFxmMmM4O1xuJGZhLXZhci10aHVtYnMtZG93bjogXFxmMTY1O1xuJGZhLXZhci10aHVtYnMtdXA6IFxcZjE2NDtcbiRmYS12YXItdGh1bWJ0YWNrOiBcXGYwOGQ7XG4kZmEtdmFyLXRpY2tldDogXFxmMTQ1O1xuJGZhLXZhci10aWNrZXQtYWx0OiBcXGYzZmY7XG4kZmEtdmFyLXRpbWVzOiBcXGYwMGQ7XG4kZmEtdmFyLXRpbWVzLWNpcmNsZTogXFxmMDU3O1xuJGZhLXZhci10aW1lcy1oZXhhZ29uOiBcXGYyZWU7XG4kZmEtdmFyLXRpbWVzLW9jdGFnb246IFxcZjJmMDtcbiRmYS12YXItdGltZXMtc3F1YXJlOiBcXGYyZDM7XG4kZmEtdmFyLXRpbnQ6IFxcZjA0MztcbiRmYS12YXItdG9nZ2xlLW9mZjogXFxmMjA0O1xuJGZhLXZhci10b2dnbGUtb246IFxcZjIwNTtcbiRmYS12YXItdHJhZGVtYXJrOiBcXGYyNWM7XG4kZmEtdmFyLXRyYWluOiBcXGYyMzg7XG4kZmEtdmFyLXRyYW5zZ2VuZGVyOiBcXGYyMjQ7XG4kZmEtdmFyLXRyYW5zZ2VuZGVyLWFsdDogXFxmMjI1O1xuJGZhLXZhci10cmFzaDogXFxmMWY4O1xuJGZhLXZhci10cmFzaC1hbHQ6IFxcZjJlZDtcbiRmYS12YXItdHJlZTogXFxmMWJiO1xuJGZhLXZhci10cmVlLWFsdDogXFxmNDAwO1xuJGZhLXZhci10cmVsbG86IFxcZjE4MTtcbiRmYS12YXItdHJpYW5nbGU6IFxcZjJlYztcbiRmYS12YXItdHJpcGFkdmlzb3I6IFxcZjI2MjtcbiRmYS12YXItdHJvcGh5OiBcXGYwOTE7XG4kZmEtdmFyLXRyb3BoeS1hbHQ6IFxcZjJlYjtcbiRmYS12YXItdHJ1Y2s6IFxcZjBkMTtcbiRmYS12YXItdHR5OiBcXGYxZTQ7XG4kZmEtdmFyLXR1bWJscjogXFxmMTczO1xuJGZhLXZhci10dW1ibHItc3F1YXJlOiBcXGYxNzQ7XG4kZmEtdmFyLXR2OiBcXGYyNmM7XG4kZmEtdmFyLXR2LXJldHJvOiBcXGY0MDE7XG4kZmEtdmFyLXR3aXRjaDogXFxmMWU4O1xuJGZhLXZhci10d2l0dGVyOiBcXGYwOTk7XG4kZmEtdmFyLXR3aXR0ZXItc3F1YXJlOiBcXGYwODE7XG4kZmEtdmFyLXR5cG8zOiBcXGY0MmI7XG4kZmEtdmFyLXViZXI6IFxcZjQwMjtcbiRmYS12YXItdWlraXQ6IFxcZjQwMztcbiRmYS12YXItdW1icmVsbGE6IFxcZjBlOTtcbiRmYS12YXItdW5kZXJsaW5lOiBcXGYwY2Q7XG4kZmEtdmFyLXVuZG86IFxcZjBlMjtcbiRmYS12YXItdW5kby1hbHQ6IFxcZjJlYTtcbiRmYS12YXItdW5pcmVnaXN0cnk6IFxcZjQwNDtcbiRmYS12YXItdW5pdmVyc2FsLWFjY2VzczogXFxmMjlhO1xuJGZhLXZhci11bml2ZXJzaXR5OiBcXGYxOWM7XG4kZmEtdmFyLXVubGluazogXFxmMTI3O1xuJGZhLXZhci11bmxvY2s6IFxcZjA5YztcbiRmYS12YXItdW5sb2NrLWFsdDogXFxmMTNlO1xuJGZhLXZhci11bnRhcHBkOiBcXGY0MDU7XG4kZmEtdmFyLXVwbG9hZDogXFxmMDkzO1xuJGZhLXZhci11c2I6IFxcZjI4NztcbiRmYS12YXItdXNkLWNpcmNsZTogXFxmMmU4O1xuJGZhLXZhci11c2Qtc3F1YXJlOiBcXGYyZTk7XG4kZmEtdmFyLXVzZXI6IFxcZjAwNztcbiRmYS12YXItdXNlci1hbHQ6IFxcZjQwNjtcbiRmYS12YXItdXNlci1jaXJjbGU6IFxcZjJiZDtcbiRmYS12YXItdXNlci1tZDogXFxmMGYwO1xuJGZhLXZhci11c2VyLXBsdXM6IFxcZjIzNDtcbiRmYS12YXItdXNlci1zZWNyZXQ6IFxcZjIxYjtcbiRmYS12YXItdXNlci10aW1lczogXFxmMjM1O1xuJGZhLXZhci11c2VyczogXFxmMGMwO1xuJGZhLXZhci11c3N1bm5haDogXFxmNDA3O1xuJGZhLXZhci11dGVuc2lsLWZvcms6IFxcZjJlMztcbiRmYS12YXItdXRlbnNpbC1rbmlmZTogXFxmMmU0O1xuJGZhLXZhci11dGVuc2lsLXNwb29uOiBcXGYyZTU7XG4kZmEtdmFyLXV0ZW5zaWxzOiBcXGYyZTc7XG4kZmEtdmFyLXV0ZW5zaWxzLWFsdDogXFxmMmU2O1xuJGZhLXZhci12YWFkaW46IFxcZjQwODtcbiRmYS12YXItdmVudXM6IFxcZjIyMTtcbiRmYS12YXItdmVudXMtZG91YmxlOiBcXGYyMjY7XG4kZmEtdmFyLXZlbnVzLW1hcnM6IFxcZjIyODtcbiRmYS12YXItdmlhY29pbjogXFxmMjM3O1xuJGZhLXZhci12aWFkZW86IFxcZjJhOTtcbiRmYS12YXItdmlhZGVvLXNxdWFyZTogXFxmMmFhO1xuJGZhLXZhci12aWJlcjogXFxmNDA5O1xuJGZhLXZhci12aWRlbzogXFxmMDNkO1xuJGZhLXZhci12aW1lbzogXFxmNDBhO1xuJGZhLXZhci12aW1lby1zcXVhcmU6IFxcZjE5NDtcbiRmYS12YXItdmltZW8tdjogXFxmMjdkO1xuJGZhLXZhci12aW5lOiBcXGYxY2E7XG4kZmEtdmFyLXZrOiBcXGYxODk7XG4kZmEtdmFyLXZudjogXFxmNDBiO1xuJGZhLXZhci12b2xsZXliYWxsLWJhbGw6IFxcZjQ1ZjtcbiRmYS12YXItdm9sdW1lLWRvd246IFxcZjAyNztcbiRmYS12YXItdm9sdW1lLW11dGU6IFxcZjJlMjtcbiRmYS12YXItdm9sdW1lLW9mZjogXFxmMDI2O1xuJGZhLXZhci12b2x1bWUtdXA6IFxcZjAyODtcbiRmYS12YXItdnVlanM6IFxcZjQxZjtcbiRmYS12YXItd2F0Y2g6IFxcZjJlMTtcbiRmYS12YXItd2VpYm86IFxcZjE4YTtcbiRmYS12YXItd2VpeGluOiBcXGYxZDc7XG4kZmEtdmFyLXdoYXRzYXBwOiBcXGYyMzI7XG4kZmEtdmFyLXdoYXRzYXBwLXNxdWFyZTogXFxmNDBjO1xuJGZhLXZhci13aGVlbGNoYWlyOiBcXGYxOTM7XG4kZmEtdmFyLXdoaXN0bGU6IFxcZjQ2MDtcbiRmYS12YXItd2htY3M6IFxcZjQwZDtcbiRmYS12YXItd2lmaTogXFxmMWViO1xuJGZhLXZhci13aWtpcGVkaWEtdzogXFxmMjY2O1xuJGZhLXZhci13aW5kb3c6IFxcZjQwZTtcbiRmYS12YXItd2luZG93LWFsdDogXFxmNDBmO1xuJGZhLXZhci13aW5kb3ctY2xvc2U6IFxcZjQxMDtcbiRmYS12YXItd2luZG93LW1heGltaXplOiBcXGYyZDA7XG4kZmEtdmFyLXdpbmRvdy1taW5pbWl6ZTogXFxmMmQxO1xuJGZhLXZhci13aW5kb3ctcmVzdG9yZTogXFxmMmQyO1xuJGZhLXZhci13aW5kb3dzOiBcXGYxN2E7XG4kZmEtdmFyLXdvbi1zaWduOiBcXGYxNTk7XG4kZmEtdmFyLXdvcmRwcmVzczogXFxmMTlhO1xuJGZhLXZhci13b3JkcHJlc3Mtc2ltcGxlOiBcXGY0MTE7XG4kZmEtdmFyLXdwYmVnaW5uZXI6IFxcZjI5NztcbiRmYS12YXItd3BleHBsb3JlcjogXFxmMmRlO1xuJGZhLXZhci13cGZvcm1zOiBcXGYyOTg7XG4kZmEtdmFyLXdyZW5jaDogXFxmMGFkO1xuJGZhLXZhci14Ym94OiBcXGY0MTI7XG4kZmEtdmFyLXhpbmc6IFxcZjE2ODtcbiRmYS12YXIteGluZy1zcXVhcmU6IFxcZjE2OTtcbiRmYS12YXIteS1jb21iaW5hdG9yOiBcXGYyM2I7XG4kZmEtdmFyLXlhaG9vOiBcXGYxOWU7XG4kZmEtdmFyLXlhbmRleDogXFxmNDEzO1xuJGZhLXZhci15YW5kZXgtaW50ZXJuYXRpb25hbDogXFxmNDE0O1xuJGZhLXZhci15ZWxwOiBcXGYxZTk7XG4kZmEtdmFyLXllbi1zaWduOiBcXGYxNTc7XG4kZmEtdmFyLXlvYXN0OiBcXGYyYjE7XG4kZmEtdmFyLXlvdXR1YmU6IFxcZjE2NztcbiRmYS12YXIteW91dHViZS1zcXVhcmU6IFxcZjQzMTtcbiIsIi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyAqXG4vLyAqIENTUyBncmlkXG4vLyAqXG4vLyAqIE1vcmUgb24gRmxleGJveCAodXNlZCBoZXJlIGZvciBmYWxsYmFjayk6XG4vLyAgICBodHRwczovL2Nzcy10cmlja3MuY29tL3NuaXBwZXRzL2Nzcy9jb21wbGV0ZS1ndWlkZS1ncmlkL1xuLy9cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cblxuLy8gKiBGbGV4LXJvdyBtaXhpbnNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vICoqIG1ha2UgYSB1bmlmb3JtIGdyaWQgKGNvbHVtbnMsIG1vc3RseSlcbi8vXG4vLyAgICBWYXJpYWJsZXM6XG4vLyAgICAtICRjb2x1bW5zOiB0b3RhbCBjb2x1bW5zIG9mIHlvdXIgZ3JpZCBzeXN0ZW1cbi8vICAgIC0gJGdhcC1ob3I6IGdhcCBiZXR3ZWVuIHRoZSBjb2x1bW5zXG5AbWl4aW4gZmxleC1ncmlkKCRjb2x1bW5zOiAkZ3JpZC1jb2x1bW5zLCAkZ2FwLWhvcjogJGdyaWQtZ2FwLWhvciwgJGdhcC12ZXJ0OiAkZ3JpZC1nYXAtaG9yKSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtaW4taGVpZ2h0OiAxcHg7XG4gIC8vbWFyZ2luLXRvcDogcmVtKC0kZ2FwLXZlcnQpOyAvLyBjb21wZW5zYXRlIGZvciBjaGlsZHJlbiB0b3AgZ2Fwc1xuICBtYXJnaW4tbGVmdDogcmVtKC0kZ2FwLWhvciAvIDIpO1xuICBtYXJnaW4tcmlnaHQ6IHJlbSgtJGdhcC1ob3IgLyAyKTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgLy8gZml4IGZvciBub24tY29sbGFwc2luZyBtYXJnaW5zXG59XG5cblxuLy8gKiogc2V0IHdpZHRoIG9mIGluZGl2aWR1YWwgZ3JpZCBjZWxsXG4vL1xuLy8gICAgVmFyaWFibGVzOlxuLy8gICAgLSAkbnVtYmVyOiBudW1iZXIgb2YgY29sdW1ucyB5b3VyIGl0ZW0gaXMgd2lkZSBPUiAnYXV0bycgZm9yIGF1dG9zaXppbmdcbi8vICAgIC0gJGNvbHVtbnM6IHRvdGFsIGNvbHVtbnMgb2YgeW91ciBncmlkIHN5c3RlbVxuLy8gICAgLSAkZ2FwLWhvcjogZ2FwIGJldHdlZW4gdGhlIGNvbHVtbnNcbkBtaXhpbiBmbGV4LWNvbCgkbnVtYmVyLCAkY29sdW1uczogJGdyaWQtY29sdW1ucywgJGdhcC1ob3I6ICRncmlkLWdhcC1ob3IsICRnYXAtdmVydDogJGdyaWQtZ2FwLWhvcikge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbi1sZWZ0OiByZW0oJGdhcC1ob3IgLyAyKTtcbiAgbWFyZ2luLXJpZ2h0OiByZW0oJGdhcC1ob3IgLyAyKTtcbiAgbWFyZ2luLXRvcDogcmVtKCRnYXAtdmVydCk7IC8vIGNyZWF0ZSBnYXBzXG4gIG1pbi1oZWlnaHQ6IDFweDtcblxuICBAaWYgKCRudW1iZXIgPT0gJ2F1dG8nKSB7XG4gICAgd2lkdGg6IDEwMCU7IC8vIG1haW5seSBmb3IgSUVcbiAgICBtYXgtd2lkdGg6IG5vbmU7XG4gICAgZmxleDogMSAxIGF1dG87XG4gICAgLy8gSUUxMSBkb2Vzbid0IHVuZGVyc3RhbmQgY2FsYygpIGluIHNob3J0aGFuZFxuICAgIGZsZXgtYmFzaXM6IGF1dG87XG4gIH0gQGVsc2Uge1xuICAgIHdpZHRoOiBjYWxjKCN7MTAwJSAqICRudW1iZXIgLyAkY29sdW1uc30gLSAje3JlbSgkZ2FwLWhvcil9KTsgLy8gbWFpbmx5IGZvciBJRVxuICAgIGZsZXg6IDAgMCBjYWxjKCN7MTAwJSAqICRudW1iZXIgLyAkY29sdW1uc30gLSAje3JlbSgkZ2FwLWhvcil9KTtcbiAgICAvLyBJRTExIGRvZXNuJ3QgdW5kZXJzdGFuZCBjYWxjKCkgaW4gc2hvcnRoYW5kXG4gICAgZmxleC1iYXNpczogY2FsYygjezEwMCUgKiAkbnVtYmVyIC8gJGNvbHVtbnN9IC0gI3tyZW0oJGdhcC1ob3IpfSk7XG4gIH1cbn1cblxuXG4vLyAqKiBwdWxsIHVzaW5nIHBvc2l0aW9uIHJlbGF0aXZlXG4vL1xuLy8gICAgVmFyaWFibGVzOlxuLy8gICAgLSAkc2l6ZTogbnVtYmVyIG9mIGNvbHVtbnMgdG8gbW92ZVxuLy8gICAgLSAkY29sdW1uczogdG90YWwgY29sdW1ucyBvZiB5b3VyIGdyaWQgc3lzdGVtXG4vLyAgICAtICRnYXAtaG9yOiBnYXAgYmV0d2VlbiB0aGUgY29sdW1uc1xuQG1peGluIGZsZXgtY29sLXB1bGwoJG51bWJlciwgJGNvbHVtbnM6ICRncmlkLWNvbHVtbnMsICRnYXAtaG9yOiAkZ3JpZC1nYXAtaG9yLCAkZ2FwLXZlcnQ6ICRncmlkLWdhcC1ob3IpIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBsZWZ0OiAjezEwMCUgKiAtJG51bWJlciAvICRjb2x1bW5zfTtcbn1cblxuLy8gKiogcHVzaCB1c2luZyBtYXJnaW4gcmVsYXRpdmVcbi8vXG4vLyAgICBWYXJpYWJsZXM6XG4vLyAgICAtICRzaXplOiBudW1iZXIgb2YgY29sdW1ucyB0byBtb3ZlXG4vLyAgICAtICRjb2x1bW5zOiB0b3RhbCBjb2x1bW5zIG9mIHlvdXIgZ3JpZCBzeXN0ZW1cbi8vICAgIC0gJGdhcC1ob3I6IGdhcCBiZXR3ZWVuIHRoZSBjb2x1bW5zXG5AbWl4aW4gZmxleC1jb2wtcHVzaCgkbnVtYmVyLCAkY29sdW1uczogJGdyaWQtY29sdW1ucywgJGdhcC1ob3I6ICRncmlkLWdhcC1ob3IsICRnYXAtdmVydDogJGdyaWQtZ2FwLWhvcikge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGxlZnQ6ICN7MTAwJSAqICRudW1iZXIgLyAkY29sdW1uc307XG59XG5cblxuLy8gKiogQ3JlYXRlIGNvbHVtbnMsIGJ1dCBmb3IgZGlmZmVyZW50IGJyZWFrcG9pbnRzXG4vLyAtLSBWYXJpYWJsZXM6XG4vLyAgICAtIDQgb3IgNSBjb2x1bW5zIHNpemVzXG4vLyAgICAtICRjb2x1bW5zOiB0b3RhbCBjb2x1bW5zIG9mIHlvdXIgZ3JpZCBzeXN0ZW1cbi8vICAgIC0gJGdhcC1ob3I6IGdhcCBiZXR3ZWVuIHRoZSBjb2x1bW5zXG4vLyAtLSBVU0FHRTogQGluY2x1ZGUgZmxleC1jb2wtcmVzcG9uc2l2ZSgxMiwgNiwgNiwgMylcbi8vIC0tICAgICAgICAgIENyZWF0ZXMgY29sdW1ucyB0aGF0IHNwYW4gMTIgY29sdW1ucyBvbiBicC14cy1zbWFsbCAoMC00NzkpXG4vLyAtLSAgICAgICAgICBDcmVhdGVzIGNvbHVtbnMgdGhhdCBzcGFuIDYgY29sdW1ucyBvbiBicC14cy13aWRlICg0ODAtNzY4XG4vLyAtLSAgICAgICAgICBDcmVhdGVzIGNvbHVtbnMgdGhhdCBzcGFuIDYgY29sdW1ucyBvbiBicC1zbSAoNzY4LTk0MClcbi8vIC0tICAgICAgICAgIENyZWF0ZXMgY29sdW1ucyB0aGF0IHNwYW4gMyBjb2x1bW5zIG9uIGJwLW1kICg5NDAt4oCmKVxuLy8gLS0gICAgICAgICAgQ3JlYXRlcyBjb2x1bW5zIHRoYXQgc3BhbiAzIGNvbHVtbnMgb24gYnAtbGcgKDEyMDAtaW5maW5pdHkpXG5cbkBtaXhpbiBmbGV4LWNvbC1yZXNwb25zaXZlKCRmbGV4LWNvbC1icC14czoxMiwgJGZsZXgtY29sLWJwLXhzLXdpZGU6JGZsZXgtY29sLWJwLXhzLCAkZmxleC1jb2wtYnAtc206MTIsICRmbGV4LWNvbC1icC1tZDoxMiwgJGZsZXgtY29sLWJwLWxnOiAkZmxleC1jb2wtYnAtbWQsICRjb2x1bW5zOiAkZ3JpZC1jb2x1bW5zLCAkZ2FwLWhvcjogJGdyaWQtZ2FwLWhvciwgJGdhcC12ZXJ0OiAkZ3JpZC1nYXAtaG9yKSB7XG5cbiAgQGlmICgkZmxleC1jb2wtYnAteHMtd2lkZSA9PSBmYWxzZSBPUiAkZmxleC1jb2wtYnAteHMgPT0gJGZsZXgtY29sLWJwLXhzLXdpZGUpIHtcbiAgICBAaW5jbHVkZSBicC14cy1vbmx5IHtcbiAgICAgIEBpbmNsdWRlIGZsZXgtY29sKCRmbGV4LWNvbC1icC14cywgJGNvbHVtbnMsICRnYXAtaG9yKTtcbiAgICB9XG4gIH0gQGVsc2Uge1xuICAgIEBpbmNsdWRlIGJwLXhzLXNtYWxsLW9ubHkge1xuICAgICAgQGluY2x1ZGUgZmxleC1jb2woJGZsZXgtY29sLWJwLXhzLCAkY29sdW1ucywgJGdhcC1ob3IpO1xuICAgIH1cblxuICAgIEBpbmNsdWRlIGJwLXhzLXdpZGUtb25seSB7XG4gICAgICBAaW5jbHVkZSBmbGV4LWNvbCgkZmxleC1jb2wtYnAteHMtd2lkZSwgJGNvbHVtbnMsICRnYXAtaG9yKTtcbiAgICB9XG4gIH1cblxuICBAaW5jbHVkZSBicC1zbS1vbmx5IHtcbiAgICBAaW5jbHVkZSBmbGV4LWNvbCgkZmxleC1jb2wtYnAtc20sICRjb2x1bW5zLCAkZ2FwLWhvcik7XG4gIH1cblxuICBAaWYgKCRmbGV4LWNvbC1icC1tZCA9PSAkZmxleC1jb2wtYnAtbGcpIHtcbiAgICBAaW5jbHVkZSBicC1tZCB7XG4gICAgICBAaW5jbHVkZSBmbGV4LWNvbCgkZmxleC1jb2wtYnAtbWQsICRjb2x1bW5zLCAkZ2FwLWhvcik7XG4gICAgfVxuICB9IEBlbHNlIHtcbiAgICBAaW5jbHVkZSBicC1tZC1vbmx5IHtcbiAgICAgIEBpbmNsdWRlIGZsZXgtY29sKCRmbGV4LWNvbC1icC1tZCwgJGNvbHVtbnMsICRnYXAtaG9yKTtcbiAgICB9XG4gICAgQGluY2x1ZGUgYnAtbGcge1xuICAgICAgQGluY2x1ZGUgZmxleC1jb2woJGZsZXgtY29sLWJwLWxnLCAkY29sdW1ucywgJGdhcC1ob3IpO1xuICAgIH1cbiAgfVxufVxuXG4vLyAqKiBjcmVhdGUgY2VsbHMgdGhhdCBzcGFuIG11bHRpcGxlIHJvd3M6IHRoaXMgaXMgZm9yIHRoZSByb3cgd3JhcHBlclxuXG5AbWl4aW4gZmxleC1yb3dzKCRoZWlnaHQsICRjb2x1bW5zOiAkZ3JpZC1jb2x1bW5zLCAkZ2FwLWhvcjogJGdyaWQtZ2FwLWhvciwgJGdhcC12ZXJ0OiAkZ3JpZC1nYXAtaG9yKSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyAvLyB2ZXJ5IGltcG9ydGFudCAhISFcbiAgaGVpZ2h0OiAkaGVpZ2h0OyAvLyBuZWVkIGEgaGVpZ2h0IGluIG9yZGVyIHRvIHN0cmV0Y2ggb3ZlclxuICBtYXJnaW4tbGVmdDogI3tyZW0oLSRnYXAtaG9yIC8gMil9O1xuICBtYXJnaW4tcmlnaHQ6ICN7cmVtKC0kZ2FwLWhvciAvIDIpfTtcbn1cblxuLy8gKiogY3JlYXRlIGNlbGxzIHRoYXQgc3BhbiBtdWx0aXBsZSByb3dzOiB0aGlzIGlzIGZvciBjZWxsc1xuLy8gICAgZG9uJ3QgZm9yZ2V0IHRvIG1lc3MgYXJvdW5kIHdpdGggJ29yZGVyJyB0byBnZXQgdGhlIG9yZGVyIHlvdSBuZWVkXG5cbkBtaXhpbiBmbGV4LXJvdygkaGVpZ2h0LCAkcm93czogMiwgJGdhcC1ob3I6ICRncmlkLWdhcC1ob3IsICRnYXAtdmVydDogJGdyaWQtZ2FwLWhvcikge1xuICBmbGV4OiAwIDAgY2FsYygjezEwMCUgKiAkaGVpZ2h0IC8gJHJvd3N9IC0gI3tyZW0oJGdhcC1ob3IpfSk7XG4gIC8vIElFMTEgZG9lc24ndCB1bmRlcnN0YW5kIGNhbGMoKSBpbiBzaG9ydGhhbmRcbiAgZmxleC1iYXNpczogY2FsYygjezEwMCUgKiAkaGVpZ2h0IC8gJHJvd3N9IC0gI3tyZW0oJGdhcC1ob3IpfSk7XG59XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFReUlBLHVCQUF1QjtBRTNGdkIsQUFBQSxHQUFHO0FBQ0gsR0FBRztBQUNILEdBQUc7QUFDSCxHQUFHO0FBQ0gsR0FBRztBQUNILEdBQUcsQ0FBQztFQUNGLFdBQVcsRUF4QkUsdUJBQXVCLEVBQUUsT0FBTztFQXlCN0MsV0FBVyxFQS9DbUIsR0FBRyxHQTJEbEM7RUFuQkQsQUFTRSxHQVRDLENBU0QsQ0FBQztFQVRILEdBQUcsQ0FVRCxDQUFDLEFBQUEsUUFBUTtFQVRYLEdBQUcsQ0FRRCxDQUFDO0VBUkgsR0FBRyxDQVNELENBQUMsQUFBQSxRQUFRO0VBUlgsR0FBRyxDQU9ELENBQUM7RUFQSCxHQUFHLENBUUQsQ0FBQyxBQUFBLFFBQVE7RUFQWCxHQUFHLENBTUQsQ0FBQztFQU5ILEdBQUcsQ0FPRCxDQUFDLEFBQUEsUUFBUTtFQU5YLEdBQUcsQ0FLRCxDQUFDO0VBTEgsR0FBRyxDQU1ELENBQUMsQUFBQSxRQUFRO0VBTFgsR0FBRyxDQUlELENBQUM7RUFKSCxHQUFHLENBS0QsQ0FBQyxBQUFBLFFBQVEsQ0FBQztJQUNSLEtBQUssRU41Q29CLE9BQU87SU02Q2hDLGVBQWUsRUFBRSxJQUFJLEdBQ3RCO0VBYkgsQUFlRSxHQWZDLENBZUQsQ0FBQyxBQUFBLE1BQU07RUFkVCxHQUFHLENBY0QsQ0FBQyxBQUFBLE1BQU07RUFiVCxHQUFHLENBYUQsQ0FBQyxBQUFBLE1BQU07RUFaVCxHQUFHLENBWUQsQ0FBQyxBQUFBLE1BQU07RUFYVCxHQUFHLENBV0QsQ0FBQyxBQUFBLE1BQU07RUFWVCxHQUFHLENBVUQsQ0FBQyxBQUFBLE1BQU0sQ0FBQztJQUNOLEtBQUssRU5qRG9CLE9BQU87SU1rRGhDLGVBQWUsRUFBRSxTQUFTLEdBQzNCOztBQUdILEFBQUEsRUFBRTtBQUNGLEdBQUcsQ0FBQztFQUNGLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQyxDSHBESCxJQUF1QixDR29ESixDQUFDO0VGMEY1QixTQUFTLEVEOUlELElBQXVCO0VDK0kvQixXQUFXLEVEL0lILElBQXVCO0VHc0QvQixLQUFLLEVOekRzQixPQUFPLEdNMERuQzs7QUFFRCxBQUFBLEVBQUU7QUFDRixHQUFHLENBQUM7RUFDRixNQUFNLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0gzREgsU0FBdUIsQ0cyREQsQ0FBQztFRm1GL0IsU0FBUyxFRDlJRCxJQUF1QjtFQytJL0IsV0FBVyxFRC9JSCxJQUF1QjtFRzZEL0IsS0FBSyxFTmhFc0IsT0FBTyxHTWlFbkM7O0FBRUQsQUFBQSxFQUFFO0FBQ0YsR0FBRyxDQUFDO0VBQ0YsTUFBTSxFQUFFLENBQUMsQ0FBQyxDQUFDLENIbEVILFNBQXVCLENHa0VELENBQUM7RUY0RS9CLFNBQVMsRUQ5SUQsSUFBdUI7RUMrSS9CLFdBQVcsRUQvSUgsTUFBdUI7RUdvRS9CLEtBQUssRU52RXNCLE9BQU8sR013RW5DOztBQUVELEFBQUEsRUFBRTtBQUNGLEdBQUcsQ0FBQztFQUNGLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQyxDSHpFSCxTQUF1QixDR3lFRCxDQUFDO0VGcUUvQixTQUFTLEVEOUlELE1BQXVCO0VDK0kvQixXQUFXLEVEL0lILElBQXVCO0VHMkUvQixLQUFLLEVOOUVzQixPQUFPLEdNK0VuQzs7QUFFRCxBQUFBLEVBQUUsRUFBRSxFQUFFO0FBQ04sR0FBRztBQUNILEdBQUcsQ0FBQztFQUNGLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQyxDSGpGSCxTQUF1QixDR2lGRCxDQUFDO0VGNkQvQixTQUFTLEVEOUlELFFBQXVCO0VDK0kvQixXQUFXLEVEL0lILElBQXVCO0VHbUYvQixLQUFLLEVOL0VxQixPQUFPLEdNZ0ZsQzs7QVZoR0QsQUFBQSxHQUFHLENBQUM7RUFDRixjQUFjLEVBQUUsTUFBTTtFQUN0QixZQUFZLEVBQUUsSUFBSTtFQUNsQixPQUFPLEVBQUUsS0FBSztFQ1laLFNBQVMsRUFBRSxJQUFJO0VBRWpCLE1BQU0sRUFBRSxJQUFJLEdEWmI7O0FBTUQsQVF3SkUsVVJ4SlEsQVF3SlAsTUFBTSxDQUFDO0VBQ04sS0FBSyxFQUFFLElBQUk7RUFDWCxPQUFPLEVBQUUsRUFBRTtFQUNYLE9BQU8sRUFBRSxLQUFLLEdBQ2Y7O0FSNUpILEFBT0ksVUFQTSxDQUtSLEdBQUcsRUFMTCxVQUFVLENBS1IsR0FBRyxBQUdBLFdBQVcsRUFSaEIsVUFBVSxDQUtSLEdBQUcsQUFJQSxZQUFZLEVBVGpCLFVBQVUsQ0FLUixHQUFHLEFBS0EsYUFBYTtBQVZsQixVQUFVLENBTVIsTUFBTTtBQU5SLFVBQVUsQ0FNUixNQUFNLEFBRUgsV0FBVztBQVJoQixVQUFVLENBTVIsTUFBTSxBQUdILFlBQVk7QUFUakIsVUFBVSxDQU1SLE1BQU0sQUFJSCxhQUFhLENBQUM7RUFDYixLQUFLLEVBQUUsSUFBSTtFQUNYLE9BQU8sRUFBRSxLQUFLO0VBQ2QsTUFBTSxFQUFFLENBQUMsQ0FBQyxDQUFDLENPWlAsUUFBdUIsQ1BZSSxDQUFDO0VBQ2hDLFNBQVMsRUFBRSxJQUFJO0VBQ2YsS0FBSyxFQUFFLElBQUk7RUFDWCxNQUFNLEVBQUUsSUFBSSxHQUNiOztBUXdZSCxNQUFNLEVBQUUsU0FBUyxFQUFFLEtBQUs7RVJ6WjFCLEFBb0JNLFVBcEJJLENBS1IsR0FBRyxBQWVFLFdBQVc7RUFwQmxCLFVBQVUsQ0FNUixNQUFNLEFBY0QsV0FBVyxDQUFDO0lBQ1gsS0FBSyxFQUFFLElBQUk7SUFDWCxNQUFNLEVBQUUsQ0FBQyxDT3JCUCxRQUF1QixDQUF2QixRQUF1QixDUHFCMkIsQ0FBQyxHQUN0RDtFQXZCUCxBQXlCTSxVQXpCSSxDQUtSLEdBQUcsQUFvQkUsWUFBWTtFQXpCbkIsVUFBVSxDQU1SLE1BQU0sQUFtQkQsWUFBWSxDQUFDO0lBQ1osS0FBSyxFQUFFLEtBQUs7SUFDWixNQUFNLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ08xQlQsUUFBdUIsQ0FBdkIsUUFBdUIsR1AyQjFCO0VBNUJQLEFBOEJNLFVBOUJJLENBS1IsR0FBRyxBQXlCRSxhQUFhO0VBOUJwQixVQUFVLENBTVIsTUFBTSxBQXdCRCxhQUFhLENBQUM7SUFDYixXQUFXLEVBQUUsSUFBSTtJQUNqQixZQUFZLEVBQUUsSUFBSSxHQUNuQjs7QUFqQ1AsQUF3Q00sVUF4Q0ksQ0FxQ1IsTUFBTSxBQUVILGFBQWEsQ0FDWixHQUFHLENBQUM7RUFDRixNQUFNLEVBQUUsTUFBTSxHQUNmOztBQTFDUCxBQTZDSSxVQTdDTSxDQXFDUixNQUFNLENBUUosR0FBRyxDQUFDO0VBRUYsS0FBSyxFQUFFLElBQUk7RUFDWCxPQUFPLEVBQUUsQ0FBQyxHQUNYOztBQWpETCxBQW9ERSxVQXBEUSxDQW9EUixVQUFVLENBQUM7RUFDVCxVQUFVLEVPcERKLFFBQXVCO0VQcUQ3QixPQUFPLEVBQUUsS0FBSztFQUNkLFVBQVUsRUFBRSxNQUFNO0VBQ2xCLFVBQVUsRUFBRSxNQUFNO0VBQ2xCLEtBQUssRUloRW9CLE9BQU8sR0ppRWpDIn0= */
